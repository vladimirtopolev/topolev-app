{"version":3,"sources":["webpack:///./src/config/locales.tsx","webpack:///./src/dictonary/index.tsx","webpack:///./src/common/helpers/with-language-context.render-props-component.tsx","webpack:///./src/modules/properties/service/api.tsx","webpack:///../node_modules/react-localization/lib/LocalizedStrings.js","webpack:///../node_modules/localized-strings/lib/LocalizedStrings.js","webpack:///../node_modules/localized-strings/lib/utils.js","webpack:///./src/common/modules/adminTableData/index.tsx","webpack:///./src/client.component.tsx","webpack:///./src/common/modules/properties/store/actions/actions.tsx"],"names":["__webpack_require__","d","__webpack_exports__","LOCALES","DEFAULT_LOCALE","key","lang","name","title","dictionary","ru","stands","equipments","news","contacts","address","mainTitle","mainDescription","makeCall","makeCallDescription","askQuestion","routeSchema","engineering","design","building","engineeringDescription","designDescription","buildingDescription","partners","aboutCompany","latestWork","seeAllCollection","readMore","readAlso","buildingStands","fullingStands","designStands","electricityStands","presentationAndSeminars","firstName","lastName","phone","company","email","message","send","makeOrderMessageSuccess","year","phoneContraction","emailContraction","en","LanguageContext","InitLanguageContext","locale","locales","changeLocale","LocalizedStrings_default","a","console","log","Object","react","_a","children","_b","Provider","value","setLanguage","getProperties","updateProperties","axios__WEBPACK_IMPORTED_MODULE_0__","clientApi","n","create","baseURL","window","location","origin","MODULE_TABLE_DOMAIN","get","properties","put","defineProperty","exports","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","_react2","_interopRequireDefault","_localizedStrings2","obj","__esModule","default","placeholderRegex","formatString","str","_len","valuesForPlaceholders","Array","_key","hasObject","res","split","filter","textPart","map","index","match","matchedKey","slice","valueForPlaceholder","undefined","valueFromObjectPlaceholder","isValidElement","Children","toArray","component","toString","join","_typeof","Symbol","iterator","constructor","_slicedToArray","arr","isArray","_arr","_n","_d","_e","_s","_i","next","done","push","err","sliceIterator","TypeError","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","utils","newObj","_interopRequireWildcard","placeholderReplaceRegex","placeholderReferenceRegex","LocalizedStrings","options","instance","_classCallCheck","this","customLanguageInterface","_opts","getInterfaceLanguage","pseudo","pseudoMultipleLanguages","logsEnabled","_interfaceLanguage","_language","setContent","_this","_Object$keys","keys","defaultLang","_defaultLanguage","_defaultLanguageFirstLevelKeys","_props","validateTranslationKeys","forEach","_pseudoAllValues","_this2","property","indexOf","lastIndexOf","strArr","len","parseInt","randomPseudo","language","_this3","bestLanguage","getBestMatchingLanguage","defaultLanguage","localizedStrings","_fallbackValues","defaultStrings","strings","_this4","_this5","_availableLanguages","_this6","input","getString","ref","referenceValue","omitWarning","current","paths","Error","ex","navigator","nav","languages","userLanguage","browserLanguage","idx","auxLang","substring","translationKeys","reservedNames","text","possible","charAt","Math","floor","random","AdminTableEntityRoutes","e","then","bind","adminTableEntityCreator","domainPath","tableName","RowsRenderer","RowRenderer","react_router","path","render","MainPage","Promise","all","ContactPage","NewsRowsRenderer","NewsRowRenderer","EquipmentRowsRenderer","EquipmentRowRenderer","Portfolio","es","dispatch","asyncActions","types","api","response","data","with_language_context_render_props_component","exact"],"mappings":"2FAEAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAO,IAAMD,EAAqB,CAC9B,CACIE,IAAK,KACLC,KAAM,QACNC,KAAM,KACNC,MAAO,WAEX,CACIH,IAAK,KACLC,KAAM,QACNC,KAAM,KACNC,MAAO,eAIFJ,EAAiBD,EAAQ,2ECjBzBM,EAAc,CACvBC,GAAI,CACAC,OAAQ,SACRC,WAAY,eACZC,KAAM,UACNC,SAAU,WACVC,QAAS,QAETC,UAAW,4BACXC,gBAAiB,iDACjBC,SAAU,kBACVC,oBAAqB,sEACrBC,YAAa,iBACbC,YAAa,gBAEbC,YAAa,iBACbC,OAAQ,SACRC,SAAU,gBAEVC,uBAAwB,uOAKxBC,kBAAmB,yMAInBC,oBAAqB,8LAKrBC,SAAU,WACVC,aAAc,aACdC,WAAY,mBACZC,iBAAkB,4BAElBC,SAAU,YACVC,SAAU,gBAEVC,eAAgB,yBAChBC,cAAe,qBACfC,aAAc,qBACdC,kBAAmB,+BACnBC,wBAAyB,wBAGzBC,UAAW,MACXC,SAAU,UACVC,MAAO,UACPC,QAAS,WACTC,MAAO,QACPC,QAAQ,kBACRC,KAAM,YACNC,wBAAyB,gJACzBC,KAAM,MAENC,iBAAkB,OAClBC,iBAAkB,SAEtBC,GAAI,CACAvC,OAAQ,SACRC,WAAY,YACZC,KAAM,OACNC,SAAU,WACVC,QAAS,UAETC,UAAW,4BACXC,gBAAiB,iDACjBC,SAAU,aACVC,oBAAqB,+DACrBC,YAAa,eACbC,YAAa,oBAGbC,YAAa,cACbC,OAAQ,SACRC,SAAU,WAEVC,uBAAwB,wNAKxBC,kBAAmB,uMAInBC,oBAAqB,kMAKrBC,SAAU,WACVC,aAAc,gBACdC,WAAY,kBACZC,iBAAkB,wBAElBC,SAAU,UACVC,SAAU,YAEVC,eAAgB,wBAChBC,cAAe,qBACfC,aAAc,mBACdC,kBAAmB,uBACnBC,wBAAyB,2BAEzBC,UAAW,aACXC,SAAU,YACVC,MAAO,QACPC,QAAS,UACTC,MAAO,QACPC,QAAQ,UACRC,KAAM,OACNC,wBAAyB,8EACzBC,KAAM,OAENC,iBAAkB,QAClBC,iBAAkB,UCvH1BjD,EAAAC,EAAAC,EAAA,sBAAAiD,IAiBA,IAAMC,EAA4C,CAC9CC,OAAQC,EAAA,EACRC,aAAc,SAACF,KAEf5C,WAAY,IAAI+C,EAAAC,EAAwBhD,IAG5CiD,QAAQC,IAAI,+BAAgClD,EAAY2C,EAAoB3C,WAAWE,QAGhF,IAAMwC,EAAkBS,OAAAC,EAAA,cAAAD,CAAoCR,GAGpDlD,EAAA,WAAC4D,OAACC,EAAAD,EAAAC,SACPC,EAAAJ,OAAAC,EAAA,SAAAD,CAAAN,EAAA,GAACD,EAAAW,EAAA,GAAQT,EAAAS,EAAA,GACf,OACIH,EAAA,cAACV,EAAgBc,SAAQ,CAACC,MAAO,CAC7Bb,OAAMA,EACNE,aAAc,SAACF,GACXD,EAAoB3C,WAAW0D,YAAYd,EAAOhD,KAClDkD,EAAaF,IAEjB5C,WAAY2C,EAAoB3C,aAE/BsD,sCCzCb/D,EAAAC,EAAAC,EAAA,sBAAAkE,IAAApE,EAAAC,EAAAC,EAAA,sBAAAmE,IAAA,IAAAC,EAAAtE,EAAA,KAMMuE,EANNvE,EAAAwE,EAAAF,GAMkBb,EAAMgB,OAAO,CAC3BC,QAASC,OAAOC,SAASC,SAIvBC,EAAsB,aAErB,SAASV,IACZ,OAAOG,EAAUQ,IAAI,QAAQD,GAG1B,SAAST,EAAiBW,GAC7B,OAAOT,EAAUU,IAAI,QAAQH,EAAuBE,sCCExDpB,OAAAsB,eAAAC,EAAA,cACAjB,OAAA,IAGA,IAAAkB,EAAAxB,OAAAyB,QAAA,SAAAC,GAAmD,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAlF,KAAAqF,EAA0B9B,OAAA+B,UAAAC,eAAAC,KAAAH,EAAArF,KAAyDiF,EAAAjF,GAAAqF,EAAArF,IAAiC,OAAAiF,GAI/OQ,EAAAC,EAFa/F,EAAQ,IAMrBgG,EAAAD,EAFwB/F,EAAQ,MAIhC,SAAA+F,EAAAE,GAAsC,OAAAA,KAAAC,WAAAD,EAAA,CAAuCE,QAAAF,GAE7E,IAAAG,EAAA,iBAYAJ,EAAAG,QAAAR,UAAAU,aAAA,SAAAC,GACA,QAAAC,EAAAf,UAAAC,OAAAe,EAAAC,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAqGA,EAAAH,EAAaG,IAClHF,EAAAE,EAAA,GAAAlB,UAAAkB,GAGA,IAAAC,GAAA,EACAC,GAAAN,GAAA,IAAAO,MAAAT,GAAAU,OAAA,SAAAC,GACA,QAAAA,IACGC,IAAA,SAAAD,EAAAE,GACH,GAAAF,EAAAG,MAAAd,GAAA,CACA,IAAAe,EAAAJ,EAAAK,MAAA,MACAC,EAAAb,EAAAW,GAGA,GAAAG,MAAAD,EAAA,CACA,IAAAE,EAAAf,EAAA,GAAAW,GACA,QAAAG,IAAAC,EAIA,OAAAF,EAHAA,EAAAE,EAOA,OAAAzB,EAAAK,QAAAqB,eAAAH,IACAV,GAAA,EACAb,EAAAK,QAAAsB,SAAAC,QAAAL,GAAAL,IAAA,SAAAW,GACA,OAAAvC,EAAA,GAA4BuC,EAAA,CAActH,IAAA4G,EAAAW,gBAI1CP,EAEA,OAAAN,IAGA,OAAAJ,EAAAC,EACAA,EAAAiB,KAAA,KAGA1C,EAAAgB,QAAAH,EAAAG,0CCtFAvC,OAAAsB,eAAAC,EAAA,cACAjB,OAAA,IAGA,IAAA4D,EAAA,mBAAAC,QAAA,iBAAAA,OAAAC,SAAA,SAAA/B,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,mBAAA8B,QAAA9B,EAAAgC,cAAAF,QAAA9B,IAAA8B,OAAApC,UAAA,gBAAAM,GAE5IiC,EAA4a,SAAAC,EAAA5C,GAA2B,GAAAkB,MAAA2B,QAAAD,GAA0B,OAAAA,EAAc,GAAAJ,OAAAC,YAAApE,OAAAuE,GAA2C,OAAxf,SAAAA,EAAA5C,GAAiC,IAAA8C,EAAA,GAAeC,GAAA,EAAeC,GAAA,EAAgBC,OAAAlB,EAAoB,IAAM,QAAAmB,EAAAC,EAAAP,EAAAJ,OAAAC,cAA0CM,GAAAG,EAAAC,EAAAC,QAAAC,QAA4CP,EAAAQ,KAAAJ,EAAAvE,QAAqBqB,GAAA8C,EAAA5C,SAAAF,GAAlC+C,GAAA,IAAyE,MAAAQ,GAAcP,GAAA,EAAWC,EAAAM,EAAY,QAAU,KAAMR,GAAAI,EAAA,QAAAA,EAAA,SAA2C,QAAU,GAAAH,EAAA,MAAAC,GAAsB,OAAAH,EAA6HU,CAAAZ,EAAA5C,GAAuC,UAAAyD,UAAA,yDAEjkB5D,EAAAxB,OAAAyB,QAAA,SAAAC,GAAmD,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAlF,KAAAqF,EAA0B9B,OAAA+B,UAAAC,eAAAC,KAAAH,EAAArF,KAAyDiF,EAAAjF,GAAAqF,EAAArF,IAAiC,OAAAiF,GAE/O2D,EAAA,WAAgC,SAAAC,EAAA5D,EAAA6D,GAA2C,QAAA5D,EAAA,EAAgBA,EAAA4D,EAAA1D,OAAkBF,IAAA,CAAO,IAAA6D,EAAAD,EAAA5D,GAA2B6D,EAAAC,WAAAD,EAAAC,aAAA,EAAwDD,EAAAE,cAAA,EAAgC,UAAAF,MAAAG,UAAA,GAAuD3F,OAAAsB,eAAAI,EAAA8D,EAAA/I,IAAA+I,IAA+D,gBAAAI,EAAAC,EAAAC,GAA2L,OAAlID,GAAAP,EAAAM,EAAA7D,UAAA8D,GAAqEC,GAAAR,EAAAM,EAAAE,GAA6DF,GAAxhB,GAIAG,EAEA,SAAA1D,GAAuC,GAAAA,KAAAC,WAA6B,OAAAD,EAAqB,IAAA2D,EAAA,GAAiB,SAAA3D,EAAmB,QAAA5F,KAAA4F,EAAuBrC,OAAA+B,UAAAC,eAAAC,KAAAI,EAAA5F,KAAAuJ,EAAAvJ,GAAA4F,EAAA5F,IAAsG,OAAtBuJ,EAAAzD,QAAAF,EAAsB2D,EAF1PC,CAFa7J,EAAQ,MAwBrB,IAAA8J,EAAA,iBACAC,EAAA,qBAEAC,EAAA,WAUA,SAAAA,EAAAb,EAAAc,IA/BA,SAAAC,EAAAV,GAAiD,KAAAU,aAAAV,GAA0C,UAAAR,UAAA,qCAgC3FmB,CAAAC,KAAAJ,GAGA,mBAAAC,IACAA,EAAA,CAAiBI,wBAAAJ,IAEjBG,KAAAE,MAAAlF,EAAA,GAA4B,CAC5BiF,wBAAAV,EAAAY,qBACAC,QAAA,EACAC,yBAAA,EACAC,aAAA,GACKT,GACLG,KAAAO,mBAAAP,KAAAE,MAAAD,0BACAD,KAAAQ,UAAAR,KAAAO,mBACAP,KAAAS,WAAA1B,GA6QA,OApQAF,EAAAe,EAAA,EACA3J,IAAA,aACA6D,MAAA,SAAAiF,GACA,IAAA2B,EAAAV,KAEAW,EAAAnH,OAAAoH,KAAA7B,GAEA8B,EADA/C,EAAA6C,EAAA,GACA,GAEAX,KAAAc,iBAAAD,EACAb,KAAAe,+BAAA,GAEAf,KAAAgB,OAAAjC,EACAQ,EAAA0B,wBAAAzH,OAAAoH,KAAA7B,EAAAiB,KAAAc,oBAEAtH,OAAAoH,KAAAZ,KAAAgB,OAAAhB,KAAAc,mBAAAI,QAAA,SAAAjL,GACA,iBAAAyK,EAAAM,OAAAN,EAAAI,kBAAA7K,IACAyK,EAAAK,+BAAAtC,KAAAxI,KAIA+J,KAAAjG,YAAAiG,KAAAO,oBAEAP,KAAAE,MAAAE,QACAJ,KAAAmB,iBAAAnB,KAAAgB,UASG,CACH/K,IAAA,mBACA6D,MAAA,SAAA+B,GACA,IAAAuF,EAAApB,KAEAxG,OAAAoH,KAAA/E,GAAAqF,QAAA,SAAAG,GACA,cAAA3D,EAAA7B,EAAAwF,IACAD,EAAAD,iBAAAtF,EAAAwF,SACS,oBAAAxF,EAAAwF,GAAA,CACT,OAAAxF,EAAAwF,GAAAC,QAAA,MAAAzF,EAAAwF,GAAAE,YAAA,OAAA1F,EAAAwF,GAAAhG,OAAA,EAEA,OAIA,IADA,IAAAmG,EAAA3F,EAAAwF,GAAA5E,MAAA,KACAtB,EAAA,EAAyBA,EAAAqG,EAAAnG,OAAmBF,GAAA,EAC5C,GAAAqG,EAAArG,GAAA2B,MAAA4C,SAEa,GAAA8B,EAAArG,GAAA2B,MAAA6C,QAEA,CACb,IAAA8B,EAAAD,EAAArG,GAAAE,OACA+F,EAAAlB,MAAAG,0BACAoB,EAAAC,SAAA,IAAAD,EAAA,KAEAD,EAAArG,GAAAoE,EAAAoC,aAAAF,GAGA5F,EAAAwF,GAAA,IAAAG,EAAA/D,KAAA,cAWG,CACHxH,IAAA,cACA6D,MAAA,SAAA8H,GACA,IAAAC,EAAA7B,KAIA8B,EAAAvC,EAAAwC,wBAAAH,EAAA5B,KAAAgB,QACAgB,EAAAxI,OAAAoH,KAAAZ,KAAAgB,QAAA,GAGA,GAFAhB,KAAAQ,UAAAsB,EAEA9B,KAAAgB,OAAAc,GAAA,CAEA,QAAA3G,EAAA,EAAuBA,EAAA6E,KAAAe,+BAAA1F,OAAgDF,GAAA,SACvE6E,UAAAe,+BAAA5F,IAEA,IAAA8G,EAAAjH,EAAA,GAA0CgF,KAAAgB,OAAAhB,KAAAQ,YAC1ChH,OAAAoH,KAAAqB,GAAAf,QAAA,SAAAjL,GACA4L,EAAA5L,GAAAgM,EAAAhM,KAGA+L,IAAAhC,KAAAQ,YACAyB,EAAAjC,KAAAgB,OAAAgB,GACAhC,KAAAkC,gBAAAD,EAAAjC,UAWG,CACH/J,IAAA,kBACA6D,MAAA,SAAAqI,EAAAC,GACA,IAAAC,EAAArC,KAEAxG,OAAAoH,KAAAuB,GAAAjB,QAAA,SAAAjL,GACAuD,OAAA+B,UAAAC,eAAAC,KAAA0G,EAAAlM,KAAAmM,EAAAnM,IAAA,KAAAmM,EAAAnM,IACAmM,EAAAnM,GAAAkM,EAAAlM,GACAoM,EAAAnC,MAAAI,aACAhH,QAAAC,IAAA,cAAAtD,EAAA,gDAAAoM,EAAA7B,UAAA,QAES,iBAAA4B,EAAAnM,IAEToM,EAAAH,gBAAAC,EAAAlM,GAAAmM,EAAAnM,QAUG,CACHA,IAAA,cACA6D,MAAA,WACA,OAAAkG,KAAAQ,YAOG,CACHvK,IAAA,uBACA6D,MAAA,WACA,OAAAkG,KAAAO,qBAOG,CACHtK,IAAA,wBACA6D,MAAA,WACA,IAAAwI,EAAAtC,KAQA,OANAA,KAAAuC,sBACAvC,KAAAuC,oBAAA,GACA/I,OAAAoH,KAAAZ,KAAAgB,QAAAE,QAAA,SAAAjL,GACAqM,EAAAC,oBAAA9D,KAAAxI,MAGA+J,KAAAuC,sBAYG,CACHtM,IAAA,eACA6D,MAAA,SAAAoC,GAGA,IAFA,IAAAsG,EAAAxC,KAEA7D,EAAAf,UAAAC,OAAAe,EAAAC,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAyGA,EAAAH,EAAaG,IACtHF,EAAAE,EAAA,GAAAlB,UAAAkB,GAGA,IAAAmG,EAAAvG,GAAA,GACA,iBAAAuG,IACAA,EAAAzC,KAAA0C,UAAAxG,EAAA,UAAAuG,GAEA,IAAAE,EAAAF,EAAAhG,MAAAkD,GAAAjD,OAAA,SAAAC,GACA,QAAAA,IACOC,IAAA,SAAAD,GACP,GAAAA,EAAAG,MAAA6C,GAAA,CACA,IAAA5C,EAAAJ,EAAAK,MAAA,MACA4F,EAAAJ,EAAAE,UAAA3F,GACA,OAAA6F,IACAJ,EAAAtC,MAAAI,aACAhH,QAAAC,IAAA,kCAAAoD,EAAA,gBAAAT,EAAA,KAGA,WAAAa,EAAA,KAEA,OAAAJ,IACOc,KAAA,IACP,OAAAkF,EAAAlG,MAAAiD,GAAAhD,OAAA,SAAAC,GACA,QAAAA,IACOC,IAAA,SAAAD,GACP,GAAAA,EAAAG,MAAA4C,GAAA,CACA,IAAA3C,EAAAJ,EAAAK,MAAA,MACAC,EAAAb,EAAAW,GAEA,QAAAG,IAAAD,EAAA,CACA,IAAAE,EAAAf,EAAA,GAAAW,GACA,QAAAG,IAAAC,EAIA,OAAAF,EAHAA,EAAAE,EAOA,OAAAF,EAEA,OAAAN,IACOc,KAAA,MAMJ,CACHxH,IAAA,YACA6D,MAAA,SAAA7D,EAAA2L,GACA,IAAAiB,EAAAzH,UAAAC,OAAA,QAAA6B,IAAA9B,UAAA,IAAAA,UAAA,GAEA,IAGA,IAFA,IAAA0H,EAAA9C,KAAAgB,OAAAY,GAAA5B,KAAAQ,WACAuC,EAAA9M,EAAAwG,MAAA,KACAtB,EAAA,EAAuBA,EAAA4H,EAAA1H,OAAkBF,GAAA,GACzC,QAAA+B,IAAA4F,EAAAC,EAAA5H,IACA,MAAA6H,MAAAD,EAAA5H,IAEA2H,IAAAC,EAAA5H,IAEA,OAAA2H,EACO,MAAAG,IACPJ,GAAA7C,KAAAE,MAAAI,aACAhH,QAAAC,IAAA,kCAAAtD,EAAA,mBAAA2L,EAAA,gBAAAqB,EAAAzK,SAGA,cAOG,CACHvC,IAAA,aACA6D,MAAA,WACA,OAAAkG,KAAAgB,WAIApB,EAtSA,GAySA7E,EAAAgB,QAAA6D,oCChVApG,OAAAsB,eAAAC,EAAA,cACAjB,OAAA,IAEAiB,EAAAoF,qBAUA,WAEA,uBAAA+C,UACA,MAFA,QAIA,IAAAC,EAAAD,UACA,GAAAC,EAAA,CACA,GAAAA,EAAAvB,SACA,OAAAuB,EAAAvB,SAEA,GAAAuB,EAAAC,WAAAD,EAAAC,UAAA,GACA,OAAAD,EAAAC,UAAA,GAEA,GAAAD,EAAAE,aACA,OAAAF,EAAAE,aAEA,GAAAF,EAAAG,gBACA,OAAAH,EAAAG,gBAGA,MAnBA,SAVAvI,EAAAgH,wBAqCA,SAAAH,EAAA7C,GAEA,GAAAA,EAAA6C,GAAA,OAAAA,EAGA,IAAA2B,EAAA3B,EAAAN,QAAA,KACAkC,EAAAD,GAAA,EAAA3B,EAAA6B,UAAA,EAAAF,GAAA3B,EACA,OAAA7C,EAAAyE,KAAAhK,OAAAoH,KAAA7B,GAAA,IA3CAhE,EAAAkG,wBAmDA,SAAAyC,GACA,IAAAC,EAAA,gGACAD,EAAAxC,QAAA,SAAAjL,GACA,QAAA0N,EAAArC,QAAArL,GACA,UAAA+M,MAAA/M,EAAA,uDAtDA8E,EAAA4G,aA+DA,SAAAF,GAGA,IAFA,IAAAmC,EAAA,GACAC,EAAA,iEACA1I,EAAA,EAAiBA,EAAAsG,EAAStG,GAAA,EAC1ByI,GAAAC,EAAAC,OAAAC,KAAAC,MAAAD,KAAAE,SAAAJ,EAAAxI,SACG,OAAAuI,+ECxEGM,EAAyB1K,OAAAC,EAAA,KAAAD,CAAK,WAAM,OAAA5D,EAAAuO,EAAA,IAAAC,KAAAxO,EAAAyO,KAAA,aAE7BC,EAA0B,SACnCC,EACAC,EACAC,EACAC,GACC,OAAAjL,EAAA,cAACkL,EAAA,EAAK,CAACC,KAAML,EAAYM,OAAQ,WAAM,OAAApL,EAAA,cAACyK,EAAsB,CAACK,WAAYA,EACZC,UAAWA,EACXC,aAAcA,EACdC,YAAaA,kCCPjF,IAAMI,EAAWtL,OAAAC,EAAA,KAAAD,CAAK,WAAM,OAAAuL,QAAAC,IAAA,CAAApP,EAAAuO,EAAA,GAAAvO,EAAAuO,EAAA,GAAAvO,EAAAuO,EAAA,GAAAvO,EAAAuO,EAAA,GAAAvO,EAAAuO,EAAA,MAAAC,KAAAxO,EAAAyO,KAAA,aACtBY,EAAczL,OAAAC,EAAA,KAAAD,CAAK,WAAM,OAAAuL,QAAAC,IAAA,CAAApP,EAAAuO,EAAA,GAAAvO,EAAAuO,EAAA,GAAAvO,EAAAuO,EAAA,GAAAvO,EAAAuO,EAAA,MAAAC,KAAAxO,EAAAyO,KAAA,aAEzBa,EAAmB1L,OAAAC,EAAA,KAAAD,CAAK,WAAM,OAAAuL,QAAAC,IAAA,CAAApP,EAAAuO,EAAA,GAAAvO,EAAAuO,EAAA,GAAAvO,EAAAuO,EAAA,MAAAC,KAAAxO,EAAAyO,KAAA,aAC9Bc,EAAkB3L,OAAAC,EAAA,KAAAD,CAAK,WAAM,OAAAuL,QAAAC,IAAA,CAAApP,EAAAuO,EAAA,GAAAvO,EAAAuO,EAAA,GAAAvO,EAAAuO,EAAA,MAAAC,KAAAxO,EAAAyO,KAAA,aAE7Be,EAAwB5L,OAAAC,EAAA,KAAAD,CAAK,WAAM,OAAAuL,QAAAC,IAAA,CAAApP,EAAAuO,EAAA,GAAAvO,EAAAuO,EAAA,MAAAC,KAAAxO,EAAAyO,KAAA,aACnCgB,EAAuB7L,OAAAC,EAAA,KAAAD,CAAK,WAAM,OAAAuL,QAAAC,IAAA,CAAApP,EAAAuO,EAAA,GAAAvO,EAAAuO,EAAA,IAAAvO,EAAAuO,EAAA,GAAAvO,EAAAuO,EAAA,MAAAC,KAAAxO,EAAAyO,KAAA,aAElCiB,EAAY9L,OAAAC,EAAA,KAAAD,CAAK,WAAM,OAAAuL,QAAAC,IAAA,CAAApP,EAAAuO,EAAA,GAAAvO,EAAAuO,EAAA,GAAAvO,EAAAuO,EAAA,GAAAvO,EAAAuO,EAAA,MAAAC,KAAAxO,EAAAyO,KAAA,aAgCdvO,EAAA,QAAA0D,OAAA+L,EAAA,EAAA/L,EAAA,CAtBA,SAACuF,GAIZ,OAHAvF,OAAAC,EAAA,UAAAD,CAAU,WACNuF,EAAMyG,SCtBHhM,OAAAiM,EAAA,EAAAjM,CACHkM,EAAA,EACAC,EAAA,IACKvB,KAAK,SAAAwB,GACF,OAAOA,EAASC,UDmBzB,IAECpM,EAAA,cAACqM,EAAA,EAAmB,KAChBrM,EAAA,cAACkL,EAAA,EAAM,KACHlL,EAAA,cAACkL,EAAA,EAAK,CAACC,KAAK,IAAImB,OAAK,EAACxI,UAAWuH,IACjCrL,EAAA,cAACkL,EAAA,EAAK,CAACC,KAAK,WAAWrH,UAAW0H,IAClCxL,EAAA,cAACkL,EAAA,EAAK,CAACC,KAAK,aAAarH,UAAW+H,IACnChB,EAAwB,QAAS,OAAQY,EAAkBC,GAC3Db,EAAwB,6BAA8B,iBAAkBc,EAAuBC,GAC/Ff,EAAwB,4BAA6B,gBAAiBc,EAAuBC,GAC7Ff,EAAwB,qBAAsB,SAAUc,EAAuBC,GAC/Ef,EAAwB,0BAA2B,cAAec,EAAuBC,GACzFf,EAAwB,4BAA6B,gBAAiBc,EAAuBC","file":"22.bundle.js","sourcesContent":["import {Locale} from '../modules/table/schema/models';\n\nexport const LOCALES: Locale[] =  [\n    {\n        key: 'ru',\n        lang: 'ru_RU',\n        name: 'RU',\n        title: 'Русский'\n    },\n    {\n        key: 'en',\n        lang: 'en_US',\n        name: 'EN',\n        title: 'Английский'\n    }\n];\n\nexport const DEFAULT_LOCALE = LOCALES[0];\n","export const dictionary =  {\n    ru: {\n        stands: 'Стенды',\n        equipments: 'Оборудование',\n        news: 'Новости',\n        contacts: 'Контакты',\n        address: 'Адрес',\n\n        mainTitle: 'Путь к успешному будущему',\n        mainDescription: 'Проектирование, дизайн и строительство стендов',\n        makeCall: 'Заказать звонок',\n        makeCallDescription: 'Мы рады будем помочь Вам по любому любому возникающему Вам вопросу.',\n        askQuestion: 'Задайте вопрос',\n        routeSchema: 'Схема проезда',\n\n        engineering: 'Проектирование',\n        design: 'Дизайн',\n        building: 'Строительство',\n\n        engineeringDescription: `\n        Мы можем предложить как стандартную комплектацию стендов,\n        которые позволяют подготовиться к участию за несколько дней,\n        а также разаработать индивидуальный проект исходя из бюджета\n        и пожеланий`,\n        designDescription: `\n        Стенды украшаются различной полиграфической продукцией:\n        печтатью полотен, наклейками различного вида исполнения,\n        баннерами, растяжками, разрабатывается система освещения `,\n        buildingDescription: `\n        Профессиональная команда устанавливает стенд,\n        обеспечивая его электроснабжением и водоснабжением.\n        Стенд собирается в помещении выставки незадолго до ее начала.`,\n\n        partners: 'Партнеры',\n        aboutCompany: 'О компании',\n        latestWork: 'Последний работы',\n        seeAllCollection: 'Смотреть всю коллекцию...',\n\n        readMore: 'Читать...',\n        readAlso: 'Читайте также',\n\n        buildingStands: 'Строительтство стендов',\n        fullingStands: 'Наполнение стендов',\n        designStands: 'Оформление стендов',\n        electricityStands: 'Энергосбережение и освещение',\n        presentationAndSeminars: 'Презентации, семинары',\n\n\n        firstName: 'Имя',\n        lastName: 'Фамилия',\n        phone: 'Телефон',\n        company: 'Компания',\n        email: 'Email',\n        message:'Текст сообщения',\n        send: 'Отправить',\n        makeOrderMessageSuccess: 'Спасибо за проявленный интерес к нам. Мы обязательно ответим на все возникающие вопросы. Наш представитель свяжется с Вами в ближайшее время.',\n        year: 'лет',\n\n        phoneContraction: 'тел.',\n        emailContraction: 'email'\n    },\n    en: {\n        stands: 'Stands',\n        equipments: 'Equipment',\n        news: 'News',\n        contacts: 'Contacts',\n        address: 'Address',\n\n        mainTitle: 'The way to success future',\n        mainDescription: 'Project, design and building exhibition stands',\n        makeCall: 'Order call',\n        makeCallDescription: 'We will be happy to help you with any question you may have.',\n        askQuestion: 'Ask question',\n        routeSchema: 'Driving direction',\n\n\n        engineering: 'Engineering',\n        design: 'Design',\n        building: 'Building',\n\n        engineeringDescription: `\n         We can offer as a standard set of stands, \n         which allow you to prepare for participation in a few days,\n         and also develop an individual project based on the budget\n         and wishes`,\n        designDescription: `\n         Stands are decorated with various printing products:\n         by printing canvases, stickers of various types of designs,\n         banners, banners, lighting system is being developed`,\n        buildingDescription: `\n         A professional team sets up a stand,\n         providing it with electricity and water supply.\n         The stand is assembled at the exhibition premises shortly before its start.`,\n\n        partners: 'Partners',\n        aboutCompany: 'About company',\n        latestWork: 'The latest work',\n        seeAllCollection: 'See all collection...',\n\n        readMore: 'Read...',\n        readAlso: 'Read also',\n\n        buildingStands: 'Construction elements',\n        fullingStands: 'Furniture for rent',\n        designStands: 'Stand decoration',\n        electricityStands: 'Electrical equipment',\n        presentationAndSeminars: 'Presentations, workshops',\n\n        firstName: 'First name',\n        lastName: 'Last name',\n        phone: 'Phone',\n        company: 'Company',\n        email: 'Email',\n        message:'Message',\n        send: 'Send',\n        makeOrderMessageSuccess: 'Thank you for interest. Our manager will call you back as soon as possible.',\n        year: 'year',\n\n        phoneContraction: 'phone',\n        emailContraction: 'email'\n    }\n};\n\n","import * as React from 'react';\nimport {useState, createContext} from 'react';\nimport {Locale} from '../../modules/table/schema/models';\nimport {DEFAULT_LOCALE} from '../../config/locales';\nimport LocalizedStringsFactory, {LocalizedStrings} from 'react-localization';\nimport {dictionary} from '../../dictonary';\n\ninterface WithLanguageContextRenderProps {\n    children: JSX.Element\n}\n\nexport interface LanguageContextState {\n    locale: Locale,\n    changeLocale: (locale: Locale) => void,\n    dictionary: LocalizedStrings<any>;\n}\n\nconst InitLanguageContext: LanguageContextState = {\n    locale: DEFAULT_LOCALE,\n    changeLocale: (locale: Locale) => {\n    },\n    dictionary: new LocalizedStringsFactory(dictionary)\n};\n\nconsole.log('JMKSHJKDHASKJHDJKSAHDJKSHJKD', dictionary, InitLanguageContext.dictionary.stands);\n\n\nexport const LanguageContext = createContext<LanguageContextState>(InitLanguageContext);\n\n\nexport default ({children}: WithLanguageContextRenderProps) => {\n    const [locale, changeLocale] = useState<Locale>(DEFAULT_LOCALE);\n    return (\n        <LanguageContext.Provider value={{\n            locale,\n            changeLocale: (locale: Locale) => {\n                InitLanguageContext.dictionary.setLanguage(locale.key);\n                changeLocale(locale);\n            },\n            dictionary: InitLanguageContext.dictionary\n        }}>\n            {children}\n        </LanguageContext.Provider>\n    );\n}\n\n\n","import axios from 'axios';\nimport {Property} from '../schema/models';\n\n\nconst API_URL_PREFIX = '/api';\n\nconst clientApi = axios.create({\n    baseURL: window.location.origin\n});\n\n// MODULE TABLE\nconst MODULE_TABLE_DOMAIN = 'properties';\n\nexport function getProperties(): Promise<any> {\n    return clientApi.get(`/api/${MODULE_TABLE_DOMAIN}`);\n}\n\nexport function updateProperties(properties: any): Promise<any> {\n    return clientApi.put(`/api/${MODULE_TABLE_DOMAIN}`, properties);\n}\n","'use strict';\n/**\n * Simple module to localize the React interface using the same syntax\n * used in the ReactNativeLocalization module\n * (https://github.com/stefalda/ReactNativeLocalization)\n *\n * Originally developed by Stefano Falda (stefano.falda@gmail.com)\n *\n * It uses a call to the Navigator/Browser object to get the current interface language,\n * then display the correct language strings or the default language (the first\n * one if a match is not found).\n *\n * This library has been refactored to use the newly created localized-strings package so to\n * unify the code and make it easier to mantain\n *\n * How to use:\n * Check the instructions at:\n * https://github.com/stefalda/react-localization\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _localizedStrings = require('localized-strings');\n\nvar _localizedStrings2 = _interopRequireDefault(_localizedStrings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar placeholderRegex = /(\\{[\\d|\\w]+\\})/;\n\n/**\n * Format the passed string replacing the numbered or tokenized placeholders\n * eg. 1: I'd like some {0} and {1}, or just {0}\n * eg. 2: I'd like some {bread} and {butter}, or just {bread}\n * Use example:\n * eg. 1: strings.formatString(strings.question, strings.bread, strings.butter)\n * eg. 2: strings.formatString(strings.question, { bread: strings.bread, butter: strings.butter }\n *\n * THIS METHOD OVERRIDE the one of the parent class by adding support for JSX code\n*/\n_localizedStrings2.default.prototype.formatString = function (str) {\n  for (var _len = arguments.length, valuesForPlaceholders = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    valuesForPlaceholders[_key - 1] = arguments[_key];\n  }\n\n  var hasObject = false;\n  var res = (str || '').split(placeholderRegex).filter(function (textPart) {\n    return !!textPart;\n  }).map(function (textPart, index) {\n    if (textPart.match(placeholderRegex)) {\n      var matchedKey = textPart.slice(1, -1);\n      var valueForPlaceholder = valuesForPlaceholders[matchedKey];\n\n      // If no value found, check if working with an object instead\n      if (valueForPlaceholder == undefined) {\n        var valueFromObjectPlaceholder = valuesForPlaceholders[0][matchedKey];\n        if (valueFromObjectPlaceholder !== undefined) {\n          valueForPlaceholder = valueFromObjectPlaceholder;\n        } else {\n          // If value still isn't found, then it must have been undefined/null\n          return valueForPlaceholder;\n        }\n      }\n\n      if (_react2.default.isValidElement(valueForPlaceholder)) {\n        hasObject = true;\n        return _react2.default.Children.toArray(valueForPlaceholder).map(function (component) {\n          return _extends({}, component, { key: index.toString() });\n        });\n      }\n\n      return valueForPlaceholder;\n    }\n    return textPart;\n  });\n  // If the results contains a object return an array otherwise return a string\n  if (hasObject) return res;\n  return res.join('');\n};\n\nexports.default = _localizedStrings2.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utils = require(\"./utils\");\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Simple module to localize the React interface using the same syntax\n * used in the ReactNativeLocalization module\n * (https://github.com/stefalda/ReactNativeLocalization)\n *\n * Originally developed by Stefano Falda (stefano.falda@gmail.com)\n *\n * It uses a call to the Navigator/Browser object to get the current interface language,\n * then display the correct language strings or the default language (the first\n * one if a match is not found).\n *\n * How to use:\n * Check the instructions at:\n * https://github.com/stefalda/localized-strings\n */\n\nvar placeholderReplaceRegex = /(\\{[\\d|\\w]+\\})/;\nvar placeholderReferenceRegex = /(\\$ref\\{[\\w|.]+\\})/;\n\nvar LocalizedStrings = function () {\n  /**\n   * Constructor used to provide the strings objects in various language and the optional callback to get\n   * the interface language\n   * @param {*} props - the strings object\n   * @param {Function} options.customLanguageInterface - the optional method to use to get the InterfaceLanguage\n   * @param {Boolean} options.pseudo - convert all strings to pseudo, helpful when implementing\n   * @param {Boolean} options.pseudoMultipleLanguages - add 40% to pseudo, helps with translations in the future\n   * @param {Boolean} options.logsEnabled - Enable/Disable console.log outputs (default=true)\n   */\n  function LocalizedStrings(props, options) {\n    _classCallCheck(this, LocalizedStrings);\n\n    //Compatibility fix with previous version\n    if (typeof options === \"function\") {\n      options = { customLanguageInterface: options };\n    }\n    this._opts = _extends({}, {\n      customLanguageInterface: utils.getInterfaceLanguage,\n      pseudo: false,\n      pseudoMultipleLanguages: false,\n      logsEnabled: true\n    }, options);\n    this._interfaceLanguage = this._opts.customLanguageInterface();\n    this._language = this._interfaceLanguage;\n    this.setContent(props);\n  }\n\n  /**\n   * Set the strings objects based on the parameter passed in the constructor\n   * @param {*} props\n   */\n\n\n  _createClass(LocalizedStrings, [{\n    key: \"setContent\",\n    value: function setContent(props) {\n      var _this = this;\n\n      var _Object$keys = Object.keys(props),\n          _Object$keys2 = _slicedToArray(_Object$keys, 1),\n          defaultLang = _Object$keys2[0];\n\n      this._defaultLanguage = defaultLang;\n      this._defaultLanguageFirstLevelKeys = [];\n      // Store locally the passed strings\n      this._props = props;\n      utils.validateTranslationKeys(Object.keys(props[this._defaultLanguage]));\n      // Store first level keys (for identifying missing translations)\n      Object.keys(this._props[this._defaultLanguage]).forEach(function (key) {\n        if (typeof _this._props[_this._defaultLanguage][key] === \"string\") {\n          _this._defaultLanguageFirstLevelKeys.push(key);\n        }\n      });\n      // Set language to its default value (the interface)\n      this.setLanguage(this._interfaceLanguage);\n      // Developermode with pseudo\n      if (this._opts.pseudo) {\n        this._pseudoAllValues(this._props);\n      }\n    }\n\n    /**\n     * Replace all strings to pseudo value\n     * @param {Object} obj - Loopable object\n     */\n\n  }, {\n    key: \"_pseudoAllValues\",\n    value: function _pseudoAllValues(obj) {\n      var _this2 = this;\n\n      Object.keys(obj).forEach(function (property) {\n        if (_typeof(obj[property]) === \"object\") {\n          _this2._pseudoAllValues(obj[property]);\n        } else if (typeof obj[property] === \"string\") {\n          if (obj[property].indexOf(\"[\") === 0 && obj[property].lastIndexOf(\"]\") === obj[property].length - 1) {\n            // already psuedo fixed\n            return;\n          }\n          // @TODO must be a way to get regex to find all replaceble strings except our replacement variables\n          var strArr = obj[property].split(\" \");\n          for (var i = 0; i < strArr.length; i += 1) {\n            if (strArr[i].match(placeholderReplaceRegex)) {\n              // we want to keep this string, includes specials\n            } else if (strArr[i].match(placeholderReferenceRegex)) {\n              // we want to keep this string, includes specials\n            } else {\n              var len = strArr[i].length;\n              if (_this2._opts.pseudoMultipleLanguages) {\n                len = parseInt(len * 1.4, 10); // add length with 40%\n              }\n              strArr[i] = utils.randomPseudo(len);\n            }\n          }\n          obj[property] = \"[\" + strArr.join(\" \") + \"]\"; // eslint-disable-line no-param-reassign\n        }\n      });\n    }\n\n    /**\n     * Can be used from ouside the class to force a particular language\n     * indipendently from the interface one\n     * @param {*} language\n     */\n\n  }, {\n    key: \"setLanguage\",\n    value: function setLanguage(language) {\n      var _this3 = this;\n\n      // Check if exists a translation for the current language or if the default\n      // should be used\n      var bestLanguage = utils.getBestMatchingLanguage(language, this._props);\n      var defaultLanguage = Object.keys(this._props)[0];\n      this._language = bestLanguage;\n      // Associate the language object to the this object\n      if (this._props[bestLanguage]) {\n        // delete default propery values to identify missing translations\n        for (var i = 0; i < this._defaultLanguageFirstLevelKeys.length; i += 1) {\n          delete this[this._defaultLanguageFirstLevelKeys[i]];\n        }\n        var localizedStrings = _extends({}, this._props[this._language]);\n        Object.keys(localizedStrings).forEach(function (key) {\n          _this3[key] = localizedStrings[key];\n        });\n        // Now add any string missing from the translation but existing in the default language\n        if (defaultLanguage !== this._language) {\n          localizedStrings = this._props[defaultLanguage];\n          this._fallbackValues(localizedStrings, this);\n        }\n      }\n    }\n\n    /**\n     * Load fallback values for missing translations\n     * @param {*} defaultStrings\n     * @param {*} strings\n     */\n\n  }, {\n    key: \"_fallbackValues\",\n    value: function _fallbackValues(defaultStrings, strings) {\n      var _this4 = this;\n\n      Object.keys(defaultStrings).forEach(function (key) {\n        if (Object.prototype.hasOwnProperty.call(defaultStrings, key) && !strings[key] && strings[key] !== \"\") {\n          strings[key] = defaultStrings[key]; // eslint-disable-line no-param-reassign\n          if (_this4._opts.logsEnabled) {\n            console.log(\"\\uD83D\\uDEA7 \\uD83D\\uDC77 key '\" + key + \"' not found in localizedStrings for language \" + _this4._language + \" \\uD83D\\uDEA7\");\n          }\n        } else if (typeof strings[key] !== \"string\") {\n          // It's an object\n          _this4._fallbackValues(defaultStrings[key], strings[key]);\n        }\n      });\n    }\n\n    /**\n     * The current language displayed (could differ from the interface language\n     * if it has been forced manually and a matching translation has been found)\n     */\n\n  }, {\n    key: \"getLanguage\",\n    value: function getLanguage() {\n      return this._language;\n    }\n\n    /**\n     * The current interface language (could differ from the language displayed)\n     */\n\n  }, {\n    key: \"getInterfaceLanguage\",\n    value: function getInterfaceLanguage() {\n      return this._interfaceLanguage;\n    }\n\n    /**\n     * Return an array containing the available languages passed as props in the constructor\n     */\n\n  }, {\n    key: \"getAvailableLanguages\",\n    value: function getAvailableLanguages() {\n      var _this5 = this;\n\n      if (!this._availableLanguages) {\n        this._availableLanguages = [];\n        Object.keys(this._props).forEach(function (key) {\n          _this5._availableLanguages.push(key);\n        });\n      }\n      return this._availableLanguages;\n    }\n\n    // Format the passed string replacing the numbered or tokenized placeholders\n    // eg. 1: I'd like some {0} and {1}, or just {0}\n    // eg. 2: I'd like some {bread} and {butter}, or just {bread}\n    // eg. 3: I'd like some $ref{bread} and $ref{butter}, or just $ref{bread}\n    // Use example:\n    // eg. 1: strings.formatString(strings.question, strings.bread, strings.butter)\n    // eg. 2: strings.formatString(strings.question, { bread: strings.bread, butter: strings.butter })\n    // eg. 3: strings.formatString(strings.question)\n\n  }, {\n    key: \"formatString\",\n    value: function formatString(str) {\n      var _this6 = this;\n\n      for (var _len = arguments.length, valuesForPlaceholders = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        valuesForPlaceholders[_key - 1] = arguments[_key];\n      }\n\n      var input = str || \"\";\n      if (typeof input === \"string\") {\n        input = this.getString(str, null, true) || input;\n      }\n      var ref = input.split(placeholderReferenceRegex).filter(function (textPart) {\n        return !!textPart;\n      }).map(function (textPart) {\n        if (textPart.match(placeholderReferenceRegex)) {\n          var matchedKey = textPart.slice(5, -1);\n          var referenceValue = _this6.getString(matchedKey);\n          if (referenceValue) return referenceValue;\n          if (_this6._opts.logsEnabled) {\n            console.log(\"No Localization ref found for '\" + textPart + \"' in string '\" + str + \"'\");\n          }\n          // lets print it another way so next replacer doesn't find it\n          return \"$ref(id:\" + matchedKey + \")\";\n        }\n        return textPart;\n      }).join(\"\");\n      return ref.split(placeholderReplaceRegex).filter(function (textPart) {\n        return !!textPart;\n      }).map(function (textPart) {\n        if (textPart.match(placeholderReplaceRegex)) {\n          var matchedKey = textPart.slice(1, -1);\n          var valueForPlaceholder = valuesForPlaceholders[matchedKey];\n          // If no value found, check if working with an object instead\n          if (valueForPlaceholder === undefined) {\n            var valueFromObjectPlaceholder = valuesForPlaceholders[0][matchedKey];\n            if (valueFromObjectPlaceholder !== undefined) {\n              valueForPlaceholder = valueFromObjectPlaceholder;\n            } else {\n              // If value still isn't found, then it must have been undefined/null\n              return valueForPlaceholder;\n            }\n          }\n\n          return valueForPlaceholder;\n        }\n        return textPart;\n      }).join(\"\");\n    }\n\n    // Return a string with the passed key in a different language or defalt if not set\n    // We allow deep . notation for finding strings\n\n  }, {\n    key: \"getString\",\n    value: function getString(key, language) {\n      var omitWarning = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      try {\n        var current = this._props[language || this._language];\n        var paths = key.split(\".\");\n        for (var i = 0; i < paths.length; i += 1) {\n          if (current[paths[i]] === undefined) {\n            throw Error(paths[i]);\n          }\n          current = current[paths[i]];\n        }\n        return current;\n      } catch (ex) {\n        if (!omitWarning && this._opts.logsEnabled) {\n          console.log(\"No localization found for key '\" + key + \"' and language '\" + language + \"', failed on \" + ex.message);\n        }\n      }\n      return null;\n    }\n\n    /**\n     * The current props (locale object)\n     */\n\n  }, {\n    key: \"getContent\",\n    value: function getContent() {\n      return this._props;\n    }\n  }]);\n\n  return LocalizedStrings;\n}();\n\nexports.default = LocalizedStrings;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getInterfaceLanguage = getInterfaceLanguage;\nexports.getBestMatchingLanguage = getBestMatchingLanguage;\nexports.validateTranslationKeys = validateTranslationKeys;\nexports.randomPseudo = randomPseudo;\n/**\n * Return the current interface language\n * If the navigator object is defined it returns the current navigator language\n * otherwise it falls back to 'en-US'\n * Works in browsers\n */\nfunction getInterfaceLanguage() {\n  var defaultLang = 'en-US';\n  if (typeof navigator === 'undefined') {\n    return defaultLang;\n  }\n  var nav = navigator; // eslint-disable-line no-undef\n  if (nav) {\n    if (nav.language) {\n      return nav.language;\n    }\n    if (!!nav.languages && !!nav.languages[0]) {\n      return nav.languages[0];\n    }\n    if (nav.userLanguage) {\n      return nav.userLanguage;\n    }\n    if (nav.browserLanguage) {\n      return nav.browserLanguage;\n    }\n  }\n  return defaultLang;\n}\n\n/**\n * Get the best match based on the language passed and the available languages\n * @param {*} language\n * @param {*} props\n */\nfunction getBestMatchingLanguage(language, props) {\n  // If an object with the passed language key exists return it\n  if (props[language]) return language;\n\n  // if the string is composed try to find a match with only the first language identifiers (en-US --> en)\n  var idx = language.indexOf('-');\n  var auxLang = idx >= 0 ? language.substring(0, idx) : language;\n  return props[auxLang] ? auxLang : Object.keys(props)[0];\n}\n\n/**\n * Check that the keys used in the provided strings object don't collide with existing property\n * already defined in the LocalizedStrings object\n * @param {*} translationKeys\n */\nfunction validateTranslationKeys(translationKeys) {\n  var reservedNames = ['_interfaceLanguage', '_language', '_defaultLanguage', '_defaultLanguageFirstLevelKeys', '_props'];\n  translationKeys.forEach(function (key) {\n    if (reservedNames.indexOf(key) !== -1) {\n      throw new Error(key + ' cannot be used as a key. It is a reserved word.');\n    }\n  });\n}\n\n/**\n * Get a random pseudo string back after specified a length\n * @param {Number} len - How many characters to get back\n */\nfunction randomPseudo(len) {\n  var text = '';\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (var i = 0; i < len; i += 1) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }return text;\n}","import * as React from 'react';\nimport {lazy} from 'react';\nimport {Route} from 'react-router';\n\nconst AdminTableEntityRoutes = lazy(() => import('./routes'));\n\nexport const adminTableEntityCreator = (\n    domainPath: string,\n    tableName: string,\n    RowsRenderer: any,\n    RowRenderer: any\n) => <Route path={domainPath} render={() => <AdminTableEntityRoutes domainPath={domainPath}\n                                                                    tableName={tableName}\n                                                                    RowsRenderer={RowsRenderer}\n                                                                    RowRenderer={RowRenderer}/>}/>;\n","import {Route, Switch} from 'react-router';\nimport * as React from 'react';\nimport {lazy, useEffect} from 'react';\nimport {connect} from 'react-redux';\n\nimport WithLanguageContext from './common/helpers/with-language-context.render-props-component';\n\nconst MainPage = lazy(() => import('./client/components/pages/main'));\nconst ContactPage = lazy(() => import('./client/components/pages/contacts/contact.component'));\n\nconst NewsRowsRenderer = lazy(() => import('./client/components/pages/news/news-rows-renderer.component'));\nconst NewsRowRenderer = lazy(() => import('./client/components/pages/news/news-row-renderer.component'));\n\nconst EquipmentRowsRenderer = lazy(() => import('./client/components/pages/equipments/equipments-rows-renderer.component'));\nconst EquipmentRowRenderer = lazy(() => import('./client/components/pages/equipments/equipments-row-renderer.component'));\n\nconst Portfolio = lazy(() => import('./client/components/pages/portfolio/portfolio.component'));\n\nimport {adminTableEntityCreator} from './common/modules/adminTableData';\n\nimport {getProperties} from './common/modules/properties/store/actions/actions';\n\ninterface ClientProps {\n    dispatch: any\n}\n\nconst Client = (props: ClientProps) => {\n    useEffect(() => {\n        props.dispatch(getProperties());\n    }, []);\n    return (\n        <WithLanguageContext>\n            <Switch>\n                <Route path=\"/\" exact component={MainPage}/>\n                <Route path=\"/contact\" component={ContactPage}/>\n                <Route path=\"/portfolio\" component={Portfolio}/>\n                {adminTableEntityCreator('/news', 'news', NewsRowsRenderer, NewsRowRenderer)}\n                {adminTableEntityCreator('/equipments/buildingStands', 'buildingStands', EquipmentRowsRenderer, EquipmentRowRenderer)}\n                {adminTableEntityCreator('/equipments/fullingStands', 'fullingStands', EquipmentRowsRenderer, EquipmentRowRenderer)}\n                {adminTableEntityCreator('/equipments/design', 'design', EquipmentRowsRenderer, EquipmentRowRenderer)}\n                {adminTableEntityCreator('/equipments/electricity', 'electricity', EquipmentRowsRenderer, EquipmentRowRenderer)}\n                {adminTableEntityCreator('/equipments/presentations', 'presentations', EquipmentRowsRenderer, EquipmentRowRenderer)}\n            </Switch>\n        </WithLanguageContext>\n    );\n};\n\n\nexport default connect()(Client);\n","import * as api from '../../../../../modules/properties/service/api';\nimport {asyncActionCreator} from '../../../../../utilities/asyncActions';\nimport {GET_COMMON_PROPERTIES} from './types';\nimport {Property} from '../../../../../modules/properties/schema/models';\n\nexport function getProperties() {\n    return asyncActionCreator<typeof GET_COMMON_PROPERTIES, Property[], undefined>(\n        GET_COMMON_PROPERTIES,\n        api.getProperties()\n            .then(response => {\n                return response.data;\n            })\n    );\n}\n"],"sourceRoot":""}