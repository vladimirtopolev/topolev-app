{"version":3,"sources":["webpack:///./src/config/locales.tsx","webpack:///./src/modules/table/components/cells/helpers/image-modal.component.styles.css?5fe3","webpack:///./src/modules/properties/store/actions/types.tsx","webpack:///./src/modules/properties/service/api.tsx","webpack:///./src/modules/table/components/cells/value-single-image.component.styles.css?d835","webpack:///./src/common/elements/locale-tabs-renderer.component.styles.css?0ebf","webpack:///./src/modules/table/components/cells/helpers/utilities.tsx","webpack:///./src/modules/table/components/cells/value-input.component.tsx","webpack:///./src/service/api.tsx","webpack:///./src/modules/table/components/cells/helpers/image-uploader-with-cropping.component.tsx","webpack:///./src/modules/table/components/cells/helpers/image-uploader.component.tsx","webpack:///./src/utilities/b64ImageToBlob.tsx","webpack:///./src/modules/table/components/cells/helpers/image-modal.component.tsx","webpack:///./src/modules/table/components/cells/helpers/image-preview-modal.component.tsx","webpack:///./src/modules/table/components/cells/value-single-image.component.tsx","webpack:///./src/common/elements/editor.component.tsx","webpack:///./src/modules/table/components/cells/value-textarea.component.tsx","webpack:///./src/modules/table/components/cells/value-date.component.tsx","webpack:///./src/modules/table/components/cells/value.component.tsx","webpack:///../node_modules/reactstrap/es/Nav.js","webpack:///../node_modules/reactstrap/es/NavItem.js","webpack:///../node_modules/reactstrap/es/TabContext.js","webpack:///../node_modules/reactstrap/es/TabContent.js","webpack:///../node_modules/reactstrap/es/TabPane.js","webpack:///./src/common/elements/locale-tabs-renderer.component.tsx","webpack:///./src/modules/properties/store/reducers/properties.tsx","webpack:///./src/modules/properties/store/reducers/index.tsx","webpack:///./src/modules/properties/components/properties.component.styles.css?4414","webpack:///./src/modules/properties/components/properties.component.tsx","webpack:///./src/modules/properties/components/properties-container.component.tsx","webpack:///./src/modules/properties/store/actions/actions.tsx"],"names":["__webpack_require__","d","__webpack_exports__","LOCALES","DEFAULT_LOCALE","key","lang","name","title","module","exports","ImageModal","ImageModal__title","ImageModal__content","ImageModal__dropAreaWrapper","ImageModal__dropArea","ImageModal__buttons","ImageModal__previewContainer","ImageModal__previewImage","ImageModal__previewImage_spinner","ImageModal__previewCroppingImage","GET_PROPERTIES","UPDATE_PROPERTIES","getProperties","updateProperties","axios__WEBPACK_IMPORTED_MODULE_0__","clientApi","n","a","create","baseURL","window","location","origin","MODULE_TABLE_DOMAIN","get","properties","put","ImagesPreview","ImagesPreview__item","ImagesPreview_tableValue","ImageGallery","Item","Item__image","Item__toolbar","Item__btn","SingleImage__uploadBtn","SingleImage__uploadBtn_section","LocaleTabsRenderer","Nav","Nav__item","Nav__link","Nav__link_active","Tabs","Tabs__tab","Tabs__tab_active","getValue","value","locale","lodash","locales","value_input_component","_a","isEditMode","changeValue","notLocalized","console","log","localizedValue","undefined","react","type","onChange","e","target","className","API_URL_PREFIX","image_uploader_with_cropping_component","aspectRatio","_b","initWidth","src","ChangePreviewButtonRenderer","changeUploadingImageStatus","saveImageInCloudinary","toggleModal","isUploadingImage","_c","Object","crop","changeCrop","__assign","aspect","_d","pixelCrop","changePixelCrop","ReactCrop","dist_ReactCrop_default","image_modal_component_styles","newCrop","onComplete","pixelCrops","keepSelection","imageStyle","width","maxHeight","spinner_component","disabled","onClick","canvas","document","createElement","image","height","getContext","drawImage","x","y","toBlob","blob","lastModifiedDate","Date","image_uploader_component","style","backgroundImage","b64Image","__awaiter","fetch","sent","then","image_modal_component","saveImage","isOpen","changeSrc","changePreview","reader","FileReader","onload","result","fileList","files","readAsDataURL","changePreviewBtn","classnames_default","inputFileBtn_disabled","onToggleModal","imageFile","body","formData","FormData","append","post","res","data","url","catch","props","Modal","size","toggle","onClosed","image_preview_modal_component","srcImage","value_single_image_component","isSingleImage","isTableValue","isOpenModalImageEditor","toggleModalImageEditor","isOpenModalPreviewImage","toggleModalPreviewImage","srcImagePreview","changeSrcImagePreview","valueLocale","images","getValueAsArray","length","value_single_image_component_styles","map","i","renderImageGalleryInPreviewMode","imageIndex","filter","imageUrl","concat","renderImageGalleryInEditMode","tinymce","_super","EditorComponent","_this","call","this","getContent","state","content","__extends","prototype","render","ts","init","menubar","branding","statusbar","removeformat","selector","remove","plugins","toolbar","value_textarea_component","editor_component","dangerouslySetInnerHTML","__html","value_date_component","rest","__rest","value_component_assign","Error","propTypes","tabs","prop_types_default","bool","pills","vertical","oneOfType","string","horizontal","justified","fill","navbar","card","tag","utils","cssModule","object","Nav_Nav","Tag","attributes","objectWithoutPropertiesLoose","classes","getVerticalClass","nav-tabs","card-header-tabs","nav-pills","card-header-pills","nav-justified","nav-fill","react_default","esm_extends","defaultProps","es_Nav","NavItem_propTypes","active","NavItem_NavItem","es_NavItem","TabContext","createContext","TabContent_propTypes","activeTab","any","TabContent_TabContent","_Component","TabContent","inheritsLoose","getDerivedStateFromProps","nextProps","prevState","_this$props","keys","Provider","activeTabId","react_lifecycles_compat_es","es_TabContent","TabPane_propTypes","tabId","TabPane","getClasses","Consumer","_ref","renderLocaleTab","activeLocaleTab","changeLocaleTab","locale_tabs_renderer_component_styles","requestProperties","action","payload","requestUpdateProperties","reducers_properties","types","status","asyncActions","SUCCEEDED","reducers_getProperties","rootReducer","redux","constants","Properties","Properties__toolbar","Group","Group__title","Group__content","Property","Property__title","Property_asGroup","Property__content","properties_component","toggleEditMode","propertiesInMemory","changePropertiesInMemory","groupedProperties","reduce","memo","property","group","properties_component_styles","groupProperties","titleGroup","propertyId","_id","value_component","newProperties","newValue","es","reducers","disptach","api","response","moduleName","actions_updateProperties","locale_tabs_renderer_component"],"mappings":"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","file":"14.bundle.js","sourcesContent":["import {Locale} from '../modules/table/schema/models';\n\nexport const LOCALES: Locale[] =  [\n    {\n        key: 'ru',\n        lang: 'ru_RU',\n        name: 'RU',\n        title: 'Русский'\n    },\n    {\n        key: 'en',\n        lang: 'en_US',\n        name: 'EN',\n        title: 'Английский'\n    }\n];\n\nexport const DEFAULT_LOCALE = LOCALES[0];\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageModal\":\"ImageModal___t6eXG\",\"ImageModal__title\":\"ImageModal__title___3sDze\",\"ImageModal__content\":\"ImageModal__content___2kic5\",\"ImageModal__dropAreaWrapper\":\"ImageModal__dropAreaWrapper___3HAv9\",\"ImageModal__dropArea\":\"ImageModal__dropArea___2h12I\",\"ImageModal__buttons\":\"ImageModal__buttons___3Mdf7\",\"ImageModal__previewContainer\":\"ImageModal__previewContainer___2JtMF\",\"ImageModal__previewImage\":\"ImageModal__previewImage___JwEgn\",\"ImageModal__previewImage_spinner\":\"ImageModal__previewImage_spinner___3wZvx\",\"ImageModal__previewCroppingImage\":\"ImageModal__previewCroppingImage___3rT5Y\"};","export const GET_PROPERTIES = 'GET_PROPERTIES';\nexport const UPDATE_PROPERTIES = 'UPDATE_PROPERTIES';\n","import axios from 'axios';\nimport {Property} from '../schema/models';\n\n\nconst API_URL_PREFIX = '/api';\n\nconst clientApi = axios.create({\n    baseURL: window.location.origin\n});\n\n// MODULE TABLE\nconst MODULE_TABLE_DOMAIN = 'properties';\n\nexport function getProperties(): Promise<any> {\n    return clientApi.get(`/api/${MODULE_TABLE_DOMAIN}`);\n}\n\nexport function updateProperties(properties: any): Promise<any> {\n    return clientApi.put(`/api/${MODULE_TABLE_DOMAIN}`, properties);\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImagesPreview\":\"ImagesPreview___18FeE\",\"ImagesPreview__item\":\"ImagesPreview__item___IKTo8\",\"ImagesPreview_tableValue\":\"ImagesPreview_tableValue___3LyC6\",\"ImageGallery\":\"ImageGallery___1vHzD\",\"Item\":\"Item___2vdzm\",\"Item__image\":\"Item__image___FpQpj\",\"Item__toolbar\":\"Item__toolbar___15Fcp\",\"Item__btn\":\"Item__btn___eWMTC\",\"SingleImage__uploadBtn\":\"SingleImage__uploadBtn___1YddE\",\"SingleImage__uploadBtn_section\":\"SingleImage__uploadBtn_section___3cewP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LocaleTabsRenderer\":\"LocaleTabsRenderer___lco9i\",\"Nav\":\"Nav___2pk0r\",\"Nav__item\":\"Nav__item___15vPX\",\"Nav__link\":\"Nav__link___31lg5\",\"Nav__link_active\":\"Nav__link_active___1TORx\",\"Tabs\":\"Tabs___3v_gg\",\"Tabs__tab\":\"Tabs__tab___2tF13\",\"Tabs__tab_active\":\"Tabs__tab_active___3_kms\"};","import * as _ from 'lodash';\nimport {Locale} from '../../../schema/models';\nimport {DEFAULT_LOCALE} from '../../../../../config/locales';\n\nexport const getValue = (value: any, locale?: Locale) => {\n    return !locale\n        ? value || ''\n        // @ts-ignore\n        : _.isObject(value) ? value[locale.key] || value[DEFAULT_LOCALE.key] || '' : value || ''\n};\n\nexport const getValueAsArray = (value: any, locale: Locale) => {\n    return !locale\n        ? value || []\n        // @ts-ignore\n        : _.isObject(value) ? value[locale.key] || value[DEFAULT_LOCALE.key] || [] : value || []\n};\n\n","import * as React from 'react';\nimport {ValueRenderProps} from './value.component';\nimport {ChangeEvent} from 'react';\nimport {getValue} from './helpers/utilities';\nimport {DEFAULT_LOCALE} from '../../../../config/locales'\n\nconst InputValue = ({value, isEditMode, changeValue, locale, notLocalized}: ValueRenderProps) => {\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n        changeValue(e.target.value, !notLocalized ? locale : undefined);\n    };\n\n    console.log(notLocalized, value, locale.key);\n    const localizedValue = getValue(value, !notLocalized ? locale : undefined);\n    return !isEditMode || (notLocalized && DEFAULT_LOCALE.key !== locale.key)\n        ? localizedValue\n        : <input type=\"text\" value={localizedValue} onChange={onChange} className=\"input\"/>\n};\n\nexport default InputValue;\n","import axios from 'axios';\n\n\nconst API_URL_PREFIX = '/api/cloudinary';\n\nconst clientApi = axios.create({\n    baseURL: window.location.origin\n});\n\n// UPLOAD IMAGE\nexport function uploadImage(body: any) {\n    return clientApi.post(`${API_URL_PREFIX}/image-upload`, body);\n}\n","import * as React from 'react';\nimport {Fragment} from 'react';\nimport {useState} from 'react';\nimport {Crop} from 'react-image-crop';\nimport * as styles from './image-modal.component.styles.css';\nimport * as ReactCropModule from 'react-image-crop';\nimport {useEffect} from 'react';\nimport Spinner from '../../../../../common/elements/spinner.component';\n\ninterface ImageUploaderWithCroppingProps {\n    src: any,\n    aspectRatio: number,\n    initWidth?: number,\n    toggleModal: () => void,\n    ChangePreviewButtonRenderer: any,\n    changeUploadingImageStatus: (status: boolean) => void,\n    saveImageInCloudinary: (imageFile: any) => void,\n    isUploadingImage: boolean\n}\n\nexport default ({\n                    aspectRatio,\n                    initWidth = 50,\n                    src,\n                    ChangePreviewButtonRenderer,\n                    changeUploadingImageStatus,\n                    saveImageInCloudinary,\n                    toggleModal,\n                    isUploadingImage\n                }: ImageUploaderWithCroppingProps) => {\n\n    const [crop, changeCrop] = useState<Crop>({\n        aspect: aspectRatio,\n        width: initWidth,\n        x: 0,\n        y: 0\n    });\n\n    useEffect(() =>\n        changeCrop({...crop, aspect: aspectRatio}), [aspectRatio]);\n\n    const [pixelCrop, changePixelCrop] = useState(null);\n\n\n    const onSaveImage = () => {\n        changeUploadingImageStatus(true);\n        const canvas = document.createElement('canvas');\n\n        const image = document.createElement('img');\n        image.src = src;\n\n        const {height, width} = image;\n        canvas.width = pixelCrop.width * width / 100;\n        canvas.height = pixelCrop.height * height / 100;\n\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(\n            image,\n            pixelCrop.x * width / 100,\n            pixelCrop.y * height / 100,\n            pixelCrop.width * width / 100,\n            pixelCrop.height * height / 100,\n            0,\n            0,\n            pixelCrop.width * width / 100,\n            pixelCrop.height * height / 100\n        );\n\n        canvas.toBlob((blob: any) => {\n            blob.name = 'crop.img';\n            blob.lastModifiedDate = new Date();\n            saveImageInCloudinary(blob);\n        }, 'image/jpeg');\n    };\n\n    const onCropChange = (newCrop: Crop) => {\n        changeCrop({...crop, ...newCrop});\n    };\n\n    const onCropComplete = (newCrop: Crop, pixelCrops?: any) => {\n        changePixelCrop(pixelCrops);\n    };\n\n    const ReactCrop = (ReactCropModule as any).default;\n\n    return (\n        <Fragment>\n            {src && (\n                <div className={styles.ImageModal__previewCroppingImage}>\n                    <ReactCrop\n                        src={src}\n                        crop={crop}\n                        onChange={onCropChange}\n                        onComplete={onCropComplete}\n                        keepSelection={true}\n                        imageStyle={{width: '100%', maxHeight: 'none'}}\n                        className={styles.ImageModal__previewContainer}\n                    />\n                    {isUploadingImage && <Spinner className={styles.ImageModal__previewImage_spinner}/>}\n                </div>\n            )}\n            <div className={styles.ImageModal__buttons}>\n                {src && (\n                    <Fragment>\n                        <ChangePreviewButtonRenderer disabled={isUploadingImage}/>\n                        <button className=\"button\" onClick={onSaveImage} disabled={isUploadingImage}>Сохранить</button>\n                    </Fragment>\n                )}\n                <button onClick={toggleModal} className=\"button\" disabled={isUploadingImage}>Отменить</button>\n            </div>\n        </Fragment>\n    );\n}\n","import * as React from 'react';\nimport {Fragment} from 'react';\nimport * as styles from './image-modal.component.styles.css';\nimport b64ImageToBlob from '../../../../../utilities/b64ImageToBlob';\nimport Spinner from '../../../../../common/elements/spinner.component';\ninterface ImageUploaderProps {\n    src: any,\n    ChangePreviewButtonRenderer: any,\n    toggleModal: () => void,\n    saveImageInCloudinary: (imageFile: any) => void,\n    isUploadingImage: boolean\n}\n\nexport default ({\n                    src,\n                    ChangePreviewButtonRenderer,\n                    toggleModal,\n                    saveImageInCloudinary,\n                    isUploadingImage\n                }: ImageUploaderProps) => {\n    const onSaveImage = () => {\n        b64ImageToBlob(src)\n            .then(blob => saveImageInCloudinary(blob));\n    };\n\n    return (\n        <Fragment>\n            {src && (\n                <div className={styles.ImageModal__previewImage}\n                     style={{\n                         backgroundImage: `url(${src})`\n                     }}>\n                    {isUploadingImage && <Spinner className={styles.ImageModal__previewImage_spinner}/>}\n                </div>\n            )}\n            <div className={styles.ImageModal__buttons}>\n                {src && (\n                    <Fragment>\n                        <ChangePreviewButtonRenderer disabled={isUploadingImage}/>\n                        <button className=\"button\" onClick={onSaveImage} disabled={isUploadingImage}>Сохранить</button>\n                    </Fragment>\n                )}\n                <button onClick={toggleModal} className=\"button\" disabled={isUploadingImage}>Отменить</button>\n            </div>\n        </Fragment>\n    );\n}\n","export default async (b64Image: any) => {\n    const response = await fetch(b64Image);\n    const blob = await response.blob();\n    return blob;\n}\n","import * as  React from 'react';\nimport {useState, ChangeEvent} from 'react';\nimport {Modal} from 'reactstrap';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport * as api from '../../../../../service/api';\nimport cn from 'classnames';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as styles from './image-modal.component.styles.css';\nimport '../../../../../styles.css';\n\nimport ImageUploaderWithCropping from './image-uploader-with-cropping.component';\nimport ImageUploader from './image-uploader.component';\n\ninterface ImageModalProps {\n    isOpen: boolean,\n    properties?: any,\n    toggleModal: () => void,\n    saveImage: (image: string) => void\n}\n\nexport default ({toggleModal, saveImage, isOpen, properties}: ImageModalProps) => {\n    const [src, changeSrc] = useState<any>(null);\n    const [isUploadingImage, changeUploadingImageStatus] = useState<boolean>(false);\n\n    const aspectRatio = properties && properties.aspectRatio;\n\n    const changePreview = (e: ChangeEvent<HTMLInputElement>) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            return changeSrc(reader.result);\n        };\n\n        const target = e.target as HTMLInputElement;\n        const fileList = target.files as FileList;\n        reader.readAsDataURL(fileList[0]);\n    };\n\n    const changePreviewBtn = (title: string, disabled?: boolean) => (\n        <div className={cn('inputFileBtn', {'inputFileBtn_disabled': disabled})}>\n            <input type=\"file\" onChange={changePreview}/>\n            {title}\n        </div>\n    );\n\n    const onToggleModal = () => {\n        if (isOpen === true) {\n            changeSrc(null);\n            changeUploadingImageStatus(false);\n        }\n        toggleModal();\n    };\n\n    const saveImageInCloudinary = (imageFile: any) => {\n        changeUploadingImageStatus(true);\n        const formData = new FormData();\n        formData.append('0', imageFile);\n\n        api.uploadImage(formData)\n            .then(res => {\n                saveImage(res.data[0].url);\n                changeUploadingImageStatus(true);\n                onToggleModal();\n            })\n            .catch(e => {\n                changeUploadingImageStatus(true);\n            });\n    };\n\n    const ChangePreviewButtonRenderer = (props: any) => changePreviewBtn('Изменить изображение', props.disabled);\n\n    return (\n        <Modal isOpen={isOpen}\n               size=\"lg\"\n               toggle={toggleModal}\n               onClosed={() => {\n               }}\n               className={styles.ImageModal}\n        >\n            <div className={styles.ImageModal__title}>\n                Редактирование изображения\n            </div>\n            <div className={styles.ImageModal__content}>\n                {!src && (\n                    <div className={styles.ImageModal__dropAreaWrapper}>\n                        <div className={styles.ImageModal__dropArea}>\n                            {changePreviewBtn('Выбрать изображение')}\n                        </div>\n                    </div>\n                )}\n                {aspectRatio\n                    ? <ImageUploaderWithCropping\n                        src={src}\n                        aspectRatio={aspectRatio}\n                        initWidth={50}\n                        toggleModal={onToggleModal}\n                        changeUploadingImageStatus={changeUploadingImageStatus}\n                        ChangePreviewButtonRenderer={ChangePreviewButtonRenderer}\n                        saveImageInCloudinary={saveImageInCloudinary}\n                        isUploadingImage={isUploadingImage}\n                    />\n                    : <ImageUploader\n                        src={src}\n                        ChangePreviewButtonRenderer={ChangePreviewButtonRenderer}\n                        toggleModal={onToggleModal}\n                        saveImageInCloudinary={saveImageInCloudinary}\n                        isUploadingImage={isUploadingImage}\n                    />\n                }\n\n            </div>\n        </Modal>);\n}\n","import * as  React from 'react';\nimport {Modal} from 'reactstrap';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as styles from './image-modal.component.styles.css';\nimport '../../../../../styles.css';\n\ninterface ImagePreviewModalProps {\n    isOpen: boolean,\n    toggleModal: () => void,\n    srcImage: string\n}\n\nexport default ({toggleModal, isOpen, srcImage}: ImagePreviewModalProps) => {\n    return (\n        <Modal isOpen={isOpen}\n               size=\"lg\"\n               toggle={toggleModal}\n        >\n            <div className={styles.ImageModal__title}>\n                Просмотр изображения\n            </div>\n            <div className={styles.ImageModal__content}>\n                <div className={styles.ImageModal__previewImage}\n                     style={{backgroundImage: `url(${srcImage})`}}>\n                </div>\n                <div className={styles.ImageModal__buttons}>\n                    <button className=\"button\" onClick={() => toggleModal()}>Закрыть</button>\n                </div>\n            </div>\n        </Modal>);\n}\n","import * as React from 'react';\nimport {useState} from 'react';\nimport cn from 'classnames';\nimport {ValueRenderProps} from './value.component';\nimport * as styles from './value-single-image.component.styles.css';\nimport ModalImageEditor from './helpers/image-modal.component';\nimport ModalPreviewImage from './helpers/image-preview-modal.component';\nimport {getValueAsArray} from './helpers/utilities';\nimport {DEFAULT_LOCALE} from '../../../../config/locales';\n\n\ninterface ImageGalleryValueProps extends ValueRenderProps {\n    isSingleImage?: boolean\n}\n\nconst SingleImageValue = ({\n                              value,\n                              locale,\n                              isEditMode,\n                              changeValue,\n                              notLocalized,\n                              isSingleImage,\n                              properties,\n                              isTableValue,\n                          }: ImageGalleryValueProps) => {\n    const [isOpenModalImageEditor, toggleModalImageEditor] = useState(false);\n    const [isOpenModalPreviewImage, toggleModalPreviewImage] = useState(false);\n    const [srcImagePreview, changeSrcImagePreview] = useState('');\n\n    const valueLocale = !notLocalized ? locale : undefined;\n    const images = getValueAsArray(value, valueLocale);\n    const aspectRatio = properties && properties.aspectRatio;\n\n    const saveImage = (imageUrl: string) => {\n        changeValue(images.concat(imageUrl), valueLocale);\n    };\n\n    const deleteImage = (imageIndex: number) => {\n        changeValue(images.filter((image: any, i: number) => i !== imageIndex), valueLocale);\n    };\n\n    const renderImageGalleryInPreviewMode = () => {\n        return (\n            images.length === 0\n                ? (<div>Изображение не задано</div>)\n                : (\n                    <div className={cn(\n                        styles.ImagesPreview, {[styles.ImagesPreview_tableValue]: isTableValue})}>\n                        {images.map((image: any, i: number) => {\n                            return (\n                                <div className={styles.ImagesPreview__item}\n                                     key={i}\n                                     onClick={() => {\n                                         changeSrcImagePreview(image);\n                                         toggleModalPreviewImage(true);\n                                     }}\n                                     style={{\n                                         backgroundImage: `url(${image})`\n                                     }}\n                                >\n                                </div>\n                            );\n                        })}\n                        <ModalPreviewImage isOpen={isOpenModalPreviewImage}\n                                           toggleModal={() => toggleModalPreviewImage(!isOpenModalPreviewImage)}\n                                           srcImage={srcImagePreview}\n                        />\n                    </div>\n                )\n        );\n    };\n\n    const renderImageGalleryInEditMode = () => {\n        return (\n            <div className={styles.ImageGallery}>\n                {images.map((image: any, i: number) => {\n                    return (\n                        <div className={styles.Item}>\n                            <div className={styles.Item__image}\n                                 style={{\n                                     backgroundImage: `url(${image})`\n                                 }}>\n                            </div>\n                            <div className={styles.Item__toolbar}>\n                                <button className={styles.Item__btn}\n                                        onClick={() => {\n                                            changeSrcImagePreview(image);\n                                            toggleModalPreviewImage(true);\n                                        }}>\n                                    Просмотр\n                                </button>\n                                <button className={styles.Item__btn}\n                                        onClick={() => {\n                                            deleteImage(i);\n                                        }}>\n                                    Удалить\n                                </button>\n                            </div>\n                        </div>\n                    );\n                })}\n                {(!isSingleImage || (isSingleImage && images.length === 0)) && (\n                    <button\n                        className={cn(styles.SingleImage__uploadBtn, {\n                            [styles.SingleImage__uploadBtn_section]: images.length !== 0\n                        })}\n                        onClick={() => toggleModalImageEditor(!isOpenModalImageEditor)}>\n                        Загрузить изображение\n                    </button>\n                )}\n                <ModalImageEditor isOpen={isOpenModalImageEditor}\n                                  properties={properties}\n                                  toggleModal={() => toggleModalImageEditor(!isOpenModalImageEditor)}\n                                  saveImage={saveImage}\n                />\n                <ModalPreviewImage isOpen={isOpenModalPreviewImage}\n                                   toggleModal={() => toggleModalPreviewImage(!isOpenModalPreviewImage)}\n                                   srcImage={srcImagePreview}\n                />\n            </div>\n        );\n    };\n\n\n    return !isEditMode || (notLocalized && DEFAULT_LOCALE.key !== locale.key)\n        ? renderImageGalleryInPreviewMode()\n        : renderImageGalleryInEditMode();\n};\n\nexport default SingleImageValue;\n","import * as React from 'react';\nimport {Component} from 'react';\nimport * as tinymce from 'tinymce';\nimport {Editor} from '@tinymce/tinymce-react';\n\n// @ts-ignore\ntinymce.baseURL = '/sources/tinymce';\n\n\ninterface EditorProps {\n    value?: string,\n    onChange?: (value: string) => void\n}\n\ninterface EditorState {\n    content: string\n}\n\nexport default class EditorComponent extends Component<EditorProps, EditorState> {\n    constructor(props: EditorProps) {\n        super(props);\n        this.state = {\n            content: props.value\n        }\n    }\n\n    onChange = (e: any) => {\n        this.props.onChange(e.target.getContent());\n    };\n\n\n    render() {\n        return (\n            <div>\n                <Editor\n                    value={this.state.content}\n                    init={{\n                        menubar: false,\n                        branding: false,\n                        statusbar: false,\n                        removeformat: [\n                            {selector: '*', remove: 'all'}\n                        ]\n                    }}\n                    plugins='table textcolor colorpicker link anchor paste'\n                    toolbar={\n                        'undo redo | removeformat | bold italic underline strikethrough | subscript superscript | ' +\n                        'table  quicklink blockquote | ' +\n                        ' forecolor backcolor forecolorpicker | link anchor |  ' +\n                        'alignleft alignright aligncenter alignjustify | ' +\n                        'bullist numlist | fullscreen preview'\n                    }\n                    onChange={this.onChange}/>\n            </div>\n        );\n    }\n}\n","import * as React from 'react';\nimport {ValueRenderProps} from './value.component';\nimport Editor from '../../../../common/elements/editor.component';\nimport {getValue} from './helpers/utilities';\n\nconst TeaxtareaValue = ({value, isEditMode, changeValue, locale}: ValueRenderProps) => {\n    const localizedValue = getValue(value, locale);\n    return isEditMode\n        ? <Editor value={localizedValue} onChange={(value => changeValue(value, locale))}/>\n        : <div dangerouslySetInnerHTML={{__html: localizedValue}}></div>;\n};\n\nexport default TeaxtareaValue;\n","import * as React from 'react';\nimport {ValueRenderProps} from './value.component';\nimport {ChangeEvent} from 'react';\nimport {getValue} from './helpers/utilities';\nimport {DEFAULT_LOCALE} from '../../../../config/locales'\n\nconst InputValue = ({value, isEditMode, changeValue}: ValueRenderProps) => {\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n        changeValue(e.target.value);\n    };\n\n    const localizedValue = getValue(value);\n    return !isEditMode\n        ? localizedValue\n        : <input type=\"date\" value={localizedValue} onChange={onChange} className=\"input\"/>\n};\n\nexport default InputValue;\n","import * as React from 'react';\nimport InputValue from './value-input.component';\nimport SingleImageCell from './value-single-image.component';\nimport TextareaValue from './value-textarea.component';\nimport DateValue from './value-date.component';\nimport {Locale} from '../../schema/models';\n\nexport interface ValueRenderProps {\n    value: any,\n    isEditMode?: boolean,\n    changeValue?: (value: any, locale?: Locale) => void,\n    locale: Locale,\n    properties?: any,\n    notLocalized?: boolean,\n    isTableValue?:boolean\n}\nexport interface ValueProps extends ValueRenderProps{\n    type: string\n}\n\nexport default ({type, ...rest}: ValueProps) => {\n    switch (type) {\n        case 'DATE':\n            return <DateValue {...rest}/>;\n        case 'INPUT':\n            return <InputValue  {...rest}/>;\n        case 'IMAGE':\n            return <SingleImageCell {...rest} isSingleImage={true}/>;\n        case 'TEXTAREA':\n            return <TextareaValue {...rest}/>;\n        case 'IMAGE_GALLERY':\n            return <SingleImageCell {...rest}/>\n        default:\n            throw Error(`Invalid header type ${type}`);\n    }\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tabs: PropTypes.bool,\n  pills: PropTypes.bool,\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  horizontal: PropTypes.string,\n  justified: PropTypes.bool,\n  fill: PropTypes.bool,\n  navbar: PropTypes.bool,\n  card: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul',\n  vertical: false\n};\n\nvar getVerticalClass = function getVerticalClass(vertical) {\n  if (vertical === false) {\n    return false;\n  } else if (vertical === true || vertical === 'xs') {\n    return 'flex-column';\n  }\n\n  return \"flex-\" + vertical + \"-column\";\n};\n\nvar Nav = function Nav(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabs = props.tabs,\n      pills = props.pills,\n      vertical = props.vertical,\n      horizontal = props.horizontal,\n      justified = props.justified,\n      fill = props.fill,\n      navbar = props.navbar,\n      card = props.card,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabs\", \"pills\", \"vertical\", \"horizontal\", \"justified\", \"fill\", \"navbar\", \"card\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, navbar ? 'navbar-nav' : 'nav', horizontal ? \"justify-content-\" + horizontal : false, getVerticalClass(vertical), {\n    'nav-tabs': tabs,\n    'card-header-tabs': card && tabs,\n    'nav-pills': pills,\n    'card-header-pills': card && pills,\n    'nav-justified': justified,\n    'nav-fill': fill\n  }), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nNav.propTypes = propTypes;\nNav.defaultProps = defaultProps;\nexport default Nav;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar NavItem = function NavItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'nav-item', active ? 'active' : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nNavItem.propTypes = propTypes;\nNavItem.defaultProps = defaultProps;\nexport default NavItem;","import React from 'react';\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\n\nexport var TabContext = React.createContext({});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar TabContent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TabContent, _Component);\n\n  TabContent.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n\n    return null;\n  };\n\n  function TabContent(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      activeTab: _this.props.activeTab\n    };\n    return _this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        Tag = _this$props.tag;\n    var attributes = omit(this.props, Object.keys(propTypes));\n    var classes = mapToCssModules(classNames('tab-content', className), cssModule);\n    return React.createElement(TabContext.Provider, {\n      value: {\n        activeTabId: this.state.activeTab\n      }\n    }, React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    })));\n  };\n\n  return TabContent;\n}(Component);\n\npolyfill(TabContent);\nexport default TabContent;\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any\n};\nvar defaultProps = {\n  tag: 'div'\n};\nexport default function TabPane(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabId = props.tabId,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tabId\", \"tag\"]);\n\n  var getClasses = function getClasses(activeTabId) {\n    return mapToCssModules(classNames('tab-pane', className, {\n      active: tabId === activeTabId\n    }), cssModule);\n  };\n\n  return React.createElement(TabContext.Consumer, null, function (_ref) {\n    var activeTabId = _ref.activeTabId;\n    return React.createElement(Tag, _extends({}, attributes, {\n      className: getClasses(activeTabId)\n    }));\n  });\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;","import * as React from 'react';\nimport {ReactElement, useState, Fragment} from 'react';\nimport {Locale} from '../../modules/table/schema/models';\nimport {Nav, NavItem, NavLink, TabContent, TabPane} from 'reactstrap';\nimport * as styles from './locale-tabs-renderer.component.styles.css';\nimport cn from 'classnames';\n\ninterface LocaleTabsRendereeProps {\n    locales: Locale[],\n    renderLocaleTab: (locale: Locale) => ReactElement\n}\n\nexport default ({locales, renderLocaleTab}: LocaleTabsRendereeProps) => {\n    if (locales.length === 1) {\n        return renderLocaleTab(locales[0]);\n    }\n    const [activeLocaleTab, changeLocaleTab] = useState<string>(locales[0].key);\n\n    return (\n        <div className={styles.LocaleTabsRenderer}>\n            <Nav tabs className={styles.Nav}>\n                {locales.map(locale => (\n                    <NavItem key={locale.key} className={styles.Nav__item}>\n                        <a\n                            onClick={() => changeLocaleTab(locale.key)}\n                            className={cn(styles.Nav__link, {\n                                [styles.Nav__link_active]: activeLocaleTab === locale.key\n                            })}\n                        >{locale.title}</a>\n                    </NavItem>\n                ))}\n            </Nav>\n            <TabContent activeTab={activeLocaleTab} className={styles.Tabs}>\n                {locales.map(locale => (\n                    <TabPane tabId={locale.key} key={locale.key} className={cn(styles.Tabs__tab, {\n                        [styles.Tabs__tab_active]:  activeLocaleTab === locale.key\n                    })}>\n                        {renderLocaleTab(locale)}\n                    </TabPane>\n                ))}\n            </TabContent>\n        </div>\n    );\n}\n","import {Reducer} from 'redux';\nimport {AsyncAction, AsyncActionStatus, SucceededAsyncAction} from '../../../../utilities/asyncActions';\n\n\nimport {GET_PROPERTIES, UPDATE_PROPERTIES} from '../actions/types';\nimport {Property} from '../../schema/models';\nimport {Params} from '../../../table/store/actions/actions';\n\ntype GetPropertiesActionSuccess = SucceededAsyncAction<typeof GET_PROPERTIES, Property[], Params>;\ntype UpdatePropertiesActionSuccess = SucceededAsyncAction<typeof UPDATE_PROPERTIES, Property[], Params>;\n\nconst properties: Reducer<Property[], AsyncAction<any, any>> = (state = [], action) => {\n    if (action.type === GET_PROPERTIES) {\n        switch (action.status) {\n            case AsyncActionStatus.SUCCEEDED:\n                return requestProperties(state, action as GetPropertiesActionSuccess);\n            default:\n                return state;\n        }\n    }\n    if (action.type === UPDATE_PROPERTIES) {\n        switch (action.status) {\n            case AsyncActionStatus.SUCCEEDED:\n                return requestUpdateProperties(state, action as UpdatePropertiesActionSuccess);\n            default:\n                return state;\n        }\n    }\n\n    return state;\n};\n\nconst requestProperties = (state: Property[], action: GetPropertiesActionSuccess):Property[] => {\n    return action.payload;\n};\nconst requestUpdateProperties = (state: Property[], action: UpdatePropertiesActionSuccess):Property[] => {\n    return action.payload;\n};\n\nexport default properties;\n\n\n//selectors\nexport const getProperties = (state: any) => {\n    return state;\n};\n","import {combineReducers} from 'redux';\n\nimport properties, * as fromOrderedCalls from './properties';\nimport {MODULE_NAME} from '../../constants';\n\nconst rootReducer = combineReducers({\n    properties\n});\n\nexport default rootReducer;\n\n\n// selectors\nexport const getProperties = (state: any) =>\n    fromOrderedCalls.getProperties(state[MODULE_NAME].properties);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Properties\":\"Properties___1UT27\",\"Properties__toolbar\":\"Properties__toolbar___g6zhE\",\"Group\":\"Group___ccR1h\",\"Group__title\":\"Group__title___OZ98S\",\"Group__content\":\"Group__content___2vkqK\",\"Property\":\"Property___1SMQQ\",\"Property__title\":\"Property__title___1cGod\",\"Property_asGroup\":\"Property_asGroup___2XRX_\",\"Property__content\":\"Property__content___2W9-p\"};","import * as React from 'react';\nimport * as _ from 'lodash';\nimport {useState, Fragment, useEffect} from 'react';\nimport cn from 'classnames';\nimport {Property} from '../schema/models';\nimport {Locale} from '../../table/schema/models';\nimport Value from '../../table/components/cells/value.component';\nimport * as styles from './properties.component.styles.css';\nimport {LOCALES} from '../../../config/locales'\n\ninterface PropertiesProps {\n    properties: Property[],\n    updateProperties: (properties: Property[]) => void,\n    locale: Locale\n}\n\ninterface GroupedProperties {\n    [K: string]: Property[]\n}\n\nexport default ({properties, locale, updateProperties}: PropertiesProps) => {\n    const [isEditMode, toggleEditMode] = useState(false);\n    const [propertiesInMemory, changePropertiesInMemory] = useState<Property[]>(properties);\n\n    useEffect(() => {\n        changePropertiesInMemory(properties);\n    }, [properties]);\n\n    const createChangeValueEvent = (propertyId: string) => {\n        return (value: any, locale?: Locale) => {\n            const newProperties =\n                propertiesInMemory\n                    .map(property => {\n                        if (property._id !== propertyId) {\n                            return property;\n                        }\n                        const newValue = locale\n                            ? _.isObject(property.value)\n                                ? {...property.value, [locale.key]: value}\n                                : LOCALES.reduce((memo, locale) => ({...memo, [locale.key]: value}), {})\n                            : value;\n                        return {...property, value: newValue};\n                    });\n            console.log(newProperties);\n            changePropertiesInMemory(newProperties);\n        };\n    };\n\n    const groupedProperties = propertiesInMemory.reduce<GroupedProperties>((memo: GroupedProperties, property) => {\n        const group = property.group || property.name;\n        return {...memo, [group]: (memo[group] || []).concat(property)};\n    }, {});\n\n    console.log(groupedProperties);\n    const toolbar =\n        <Fragment>\n            {!isEditMode && <button className=\"button\" onClick={() => toggleEditMode(true)}>Редактировать</button>}\n            {isEditMode &&\n            <button className=\"button\" onClick={() => toggleEditMode(false)}>Назад без сохранения</button>}\n            {isEditMode &&\n            <button className=\"button\" onClick={() => {\n                updateProperties(propertiesInMemory);\n                toggleEditMode(false);\n            }}>Сохранить изменения</button>}\n        </Fragment>;\n\n    return (\n        <div className={styles.Properties}>\n            <div className={styles.Properties__toolbar}>\n                {toolbar}\n            </div>\n            {Object.keys(groupedProperties).map(group => {\n                const groupProperties = groupedProperties[group];\n                return (\n                    <div className={styles.Group} key={group}>\n                        {groupProperties.length > 1\n                        && <div className={styles.Group__title}>{groupProperties[0].titleGroup}</div>}\n                        <div className={styles.Group__content}>\n                            {groupProperties.map(property => (\n                                <div className={cn(styles.Property, {\n                                    [styles.Property_asGroup]: groupProperties.length === 1\n                                })} key={property._id}>\n                                    <div className={styles.Property__title}>{property.name}</div>\n                                    <div className={styles.Property__content}>\n                                        <Value type={property.type}\n                                               value={property.value}\n                                               notLocalized={property.notLocalized}\n                                               isEditMode={isEditMode}\n                                               changeValue={createChangeValueEvent(property._id)}\n                                               locale={locale}/>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                );\n            })}\n            <div className={styles.Properties__toolbar}>\n                {toolbar}\n            </div>\n        </div>\n    );\n};\n","import * as React from 'react';\nimport Properties from './properties.component';\nimport {connect} from 'react-redux';\nimport * as selectors from '../store/reducers';\nimport {getProperties, updateProperties} from '../store/actions/actions';\nimport {Property} from '../schema/models';\nimport LocaleTabsRenderer from '../../../common/elements/locale-tabs-renderer.component';\nimport {LOCALES} from '../../../config/locales';\nimport {useEffect} from 'react';\n\nexport interface PropertiesContainerProps {\n    properties: Property[],\n    getProperties: () => void\n    updateProperties: (properties: any) => void\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        properties: selectors.getProperties(state)\n    };\n};\nconst mapDispatchToProps = (disptach: any) => {\n    return {\n        getProperties: () => disptach(getProperties()),\n        updateProperties: (properties: any) => disptach(updateProperties(properties))\n    };\n};\n\nconst PropertiesComponent = ({properties, getProperties, updateProperties}: PropertiesContainerProps) => {\n    useEffect(() => {\n        getProperties();\n    }, []);\n\n    return <LocaleTabsRenderer\n        locales={LOCALES}\n        renderLocaleTab={locale =>\n            <Properties properties={properties} locale={locale} updateProperties={updateProperties}/>}/>;\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PropertiesComponent);\n\n","import * as api from '../../service/api';\nimport {asyncActionCreator} from '../../../../utilities/asyncActions';\nimport {GET_PROPERTIES, UPDATE_PROPERTIES} from './types';\nimport {Property} from '../../schema/models';\nimport {MODULE_NAME} from '../../constants';\n\nexport type Params = {\n    moduleName: string,\n}\n\nexport function getProperties() {\n    return asyncActionCreator<typeof GET_PROPERTIES, Property[], Params>(\n        GET_PROPERTIES,\n        api.getProperties()\n            .then(response => {\n                return response.data;\n            }),\n        {moduleName: MODULE_NAME}\n    );\n}\n\nexport function updateProperties(properties: any) {\n    return asyncActionCreator<typeof UPDATE_PROPERTIES, Property[], Params>(\n        UPDATE_PROPERTIES,\n        api.updateProperties(properties)\n            .then(response => {\n                return response.data;\n            }),\n        {moduleName: MODULE_NAME}\n    );\n}\n"],"sourceRoot":""}