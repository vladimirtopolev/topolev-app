{"version":3,"sources":["webpack:///./src/config/locales.tsx","webpack:///../node_modules/normalizr/dist/normalizr.es.js","webpack:///./src/modules/table/schema/table.tsx","webpack:///./src/modules/table/components/cells/helpers/image-modal.component.styles.css?5fe3","webpack:///./src/modules/table/store/actions/types.tsx","webpack:///./src/modules/table/components/cells/value-single-image.component.styles.css?d835","webpack:///./src/modules/table/components/cells/cell.component.tsx","webpack:///./src/modules/table/components/cells/helpers/utilities.tsx","webpack:///./src/modules/table/components/cells/value-input.component.tsx","webpack:///./src/service/api.tsx","webpack:///./src/modules/table/components/cells/helpers/image-uploader-with-cropping.component.tsx","webpack:///./src/modules/table/components/cells/helpers/image-uploader.component.tsx","webpack:///./src/utilities/b64ImageToBlob.tsx","webpack:///./src/modules/table/components/cells/helpers/image-modal.component.tsx","webpack:///./src/modules/table/components/cells/helpers/image-preview-modal.component.tsx","webpack:///./src/modules/table/components/cells/value-single-image.component.tsx","webpack:///./src/common/elements/editor.component.tsx","webpack:///./src/modules/table/components/cells/value-textarea.component.tsx","webpack:///./src/modules/table/components/cells/value-date.component.tsx","webpack:///./src/modules/table/components/cells/value.component.tsx","webpack:///./src/modules/table/store/reducers/tables.tsx","webpack:///./src/modules/table/store/reducers/index.tsx","webpack:///./src/common/helpers/with-spinner.render-props-component.tsx","webpack:///./src/modules/table/service/api.tsx","webpack:///./src/modules/table/store/actions/actions.tsx"],"names":["__webpack_require__","d","__webpack_exports__","LOCALES","DEFAULT_LOCALE","key","lang","name","title","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_createClass","Constructor","protoProps","staticProps","prototype","_defineProperty","obj","value","_objectSpread","arguments","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","_inheritsLoose","subClass","superClass","create","constructor","__proto__","isImmutable","object","hasOwnProperty","_map","denormalizeImmutable","schema","input","unvisit","reduce","stringKey","has","set","get","normalize$1","getDefaultGetId","idAttribute","EntitySchema","definition","options","Error","_options","_options$idAttribute","_options$mergeStrateg","mergeStrategy","entityA","entityB","_options$processStrat","processStrategy","this","_key","_getId","_idAttribute","_mergeStrategy","_processStrategy","define","_proto","entitySchema","_objectSpread2","getId","parent","merge","normalize","visit","addEntity","visitedEntities","_this","some","entity","push","processedEntity","denormalize","_this2","PolymorphicSchema","schemaAttribute","_schemaAttribute","getSchemaAttribute","isSingleSchema","inferSchema","attr","normalizeValue","normalizedValue","id","denormalizeValue","schemaKey","UnionSchema","_PolymorphicSchema","call","ValuesSchema","apply","output","index","_objectSpread3","entityOrId","validateSchema","Array","isArray","getValues","map","ArraySchema","_normalize","localSchema","_denormalize","Entity","ObjectSchema","_len","args","_len2","_key2","Union","Values","entities","existingEntity","addEntities","result","tableHeaders","table","normalizr__WEBPACK_IMPORTED_MODULE_0__","header","headers","cell","type","cells","row","rows","module","exports","ImageModal","ImageModal__title","ImageModal__content","ImageModal__dropAreaWrapper","ImageModal__dropArea","ImageModal__buttons","ImageModal__previewContainer","ImageModal__previewImage","ImageModal__previewImage_spinner","ImageModal__previewCroppingImage","GET_TABLE_ACTION","GET_TABLE_HEADERS_ACTION","GET_TABLE_ROWS_ACTION","GET_TABLE_ROW_ACTION","UPDATE_TABLE_ROW_ACTION","SAVE_TABLE_ROW_ACTIONS","DELETE_TABLE_ROW_ACTION","ImagesPreview","ImagesPreview__item","ImagesPreview_tableValue","ImageGallery","Item","Item__image","Item__toolbar","Item__btn","SingleImage__uploadBtn","SingleImage__uploadBtn_section","_a","changeCell","rest","__rest","react__WEBPACK_IMPORTED_MODULE_0__","_value_component__WEBPACK_IMPORTED_MODULE_1__","__assign","changeValue","locale","_id","properties","getValue","lodash","locales","value_input_component","isEditMode","notLocalized","console","log","localizedValue","undefined","react","onChange","e","className","API_URL_PREFIX","clientApi","a","baseURL","window","location","origin","image_uploader_with_cropping_component","aspectRatio","_b","initWidth","src","ChangePreviewButtonRenderer","changeUploadingImageStatus","saveImageInCloudinary","toggleModal","isUploadingImage","_c","crop","changeCrop","aspect","_d","pixelCrop","changePixelCrop","ReactCrop","dist_ReactCrop_default","image_modal_component_styles","newCrop","onComplete","pixelCrops","keepSelection","imageStyle","width","maxHeight","spinner_component","disabled","onClick","canvas","document","createElement","image","height","getContext","drawImage","x","y","toBlob","blob","lastModifiedDate","Date","image_uploader_component","style","backgroundImage","b64Image","__awaiter","fetch","sent","then","image_modal_component","saveImage","isOpen","changeSrc","changePreview","reader","FileReader","onload","fileList","files","readAsDataURL","changePreviewBtn","classnames_default","inputFileBtn_disabled","onToggleModal","imageFile","body","formData","FormData","append","post","res","data","url","catch","Modal","size","toggle","onClosed","image_preview_modal_component","srcImage","value_single_image_component","isSingleImage","isTableValue","isOpenModalImageEditor","toggleModalImageEditor","isOpenModalPreviewImage","toggleModalPreviewImage","srcImagePreview","changeSrcImagePreview","valueLocale","images","getValueAsArray","value_single_image_component_styles","renderImageGalleryInPreviewMode","imageIndex","imageUrl","renderImageGalleryInEditMode","tinymce","_super","EditorComponent","getContent","state","content","__extends","render","ts","init","menubar","branding","statusbar","removeformat","selector","remove","plugins","toolbar","value_textarea_component","editor_component","dangerouslySetInnerHTML","__html","value_date_component","value_component_assign","reducers_tables","action","types","status","asyncActions","SUCCEEDED","requestTableSuccess","requestTableHeadersSuccess","requestTableRowsSuccess","requestDeleteTableRowSuccess","payload","tableName","params","headerIds","rowIds","rowId","getTable","rootReducer","redux","tables","asyncStatuses","reducers_assign","reducers_getTable","constants","reducers_getTableMeta","tableMeta","getTableMeta","reducers_getTableHeaders","headerKey","getTableHeaders","reducers_getTableRows","rowKey","cellKey","getTableRows","reducers_getTableRow","getTableRow","getAsyncTaskStatuses","isLoadingTasks","tasks","actionKey","_elements_spinner_component__WEBPACK_IMPORTED_MODULE_1__","isLoading","children","MODULE_TABLE_DOMAIN","actions_getTableHeaders","actions_getTableRows","actions_getTableRow","actions_saveTableRow","actions_updateTableRow","actions_deleteTableRow","MODULE_NAME","response","normalizr_es","moduleName","saveTableRow","idRow","put","updateTableRow","delete","deleteTableRow"],"mappings":"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","file":"6.bundle.js","sourcesContent":["import {Locale} from '../modules/table/schema/models';\n\nexport const LOCALES: Locale[] =  [\n    {\n        key: 'ru',\n        lang: 'ru_RU',\n        name: 'RU',\n        title: 'Русский'\n    },\n    {\n        key: 'en',\n        lang: 'en_US',\n        name: 'EN',\n        title: 'Английский'\n    }\n];\n\nexport const DEFAULT_LOCALE = LOCALES[0];\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\n/**\n * Helpers to enable Immutable compatibility *without* bringing in\n * the 'immutable' package as a dependency.\n */\n\n/**\n * Check if an object is immutable by checking if it has a key specific\n * to the immutable library.\n *\n * @param  {any} object\n * @return {bool}\n */\nfunction isImmutable(object) {\n  return !!(object && typeof object.hasOwnProperty === 'function' && (object.hasOwnProperty('__ownerID') || // Immutable.Map\n  object._map && object._map.hasOwnProperty('__ownerID'))); // Immutable.Record\n}\n/**\n * Denormalize an immutable entity.\n *\n * @param  {Schema} schema\n * @param  {Immutable.Map|Immutable.Record} input\n * @param  {function} unvisit\n * @param  {function} getDenormalizedEntity\n * @return {Immutable.Map|Immutable.Record}\n */\n\nfunction denormalizeImmutable(schema, input, unvisit) {\n  return Object.keys(schema).reduce(function (object, key) {\n    // Immutable maps cast keys to strings on write so we need to ensure\n    // we're accessing them using string keys.\n    var stringKey = \"\" + key;\n\n    if (object.has(stringKey)) {\n      return object.set(stringKey, unvisit(object.get(stringKey), schema[stringKey]));\n    } else {\n      return object;\n    }\n  }, input);\n}\n\nvar ImmutableUtils = /*#__PURE__*/Object.freeze({\n  isImmutable: isImmutable,\n  denormalizeImmutable: denormalizeImmutable\n});\n\nvar getDefaultGetId = function getDefaultGetId(idAttribute) {\n  return function (input) {\n    return isImmutable(input) ? input.get(idAttribute) : input[idAttribute];\n  };\n};\n\nvar EntitySchema =\n/*#__PURE__*/\nfunction () {\n  function EntitySchema(key, definition, options) {\n    if (definition === void 0) {\n      definition = {};\n    }\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!key || typeof key !== 'string') {\n      throw new Error(\"Expected a string key for Entity, but found \" + key + \".\");\n    }\n\n    var _options = options,\n        _options$idAttribute = _options.idAttribute,\n        idAttribute = _options$idAttribute === void 0 ? 'id' : _options$idAttribute,\n        _options$mergeStrateg = _options.mergeStrategy,\n        mergeStrategy = _options$mergeStrateg === void 0 ? function (entityA, entityB) {\n      return _objectSpread({}, entityA, entityB);\n    } : _options$mergeStrateg,\n        _options$processStrat = _options.processStrategy,\n        processStrategy = _options$processStrat === void 0 ? function (input) {\n      return _objectSpread({}, input);\n    } : _options$processStrat;\n    this._key = key;\n    this._getId = typeof idAttribute === 'function' ? idAttribute : getDefaultGetId(idAttribute);\n    this._idAttribute = idAttribute;\n    this._mergeStrategy = mergeStrategy;\n    this._processStrategy = processStrategy;\n    this.define(definition);\n  }\n\n  var _proto = EntitySchema.prototype;\n\n  _proto.define = function define(definition) {\n    this.schema = Object.keys(definition).reduce(function (entitySchema, key) {\n      var _objectSpread2;\n\n      var schema = definition[key];\n      return _objectSpread({}, entitySchema, (_objectSpread2 = {}, _objectSpread2[key] = schema, _objectSpread2));\n    }, this.schema || {});\n  };\n\n  _proto.getId = function getId(input, parent, key) {\n    return this._getId(input, parent, key);\n  };\n\n  _proto.merge = function merge(entityA, entityB) {\n    return this._mergeStrategy(entityA, entityB);\n  };\n\n  _proto.normalize = function normalize(input, parent, key, visit, addEntity, visitedEntities) {\n    var _this = this;\n\n    if (visitedEntities.some(function (entity) {\n      return entity === input;\n    })) {\n      return this.getId(input, parent, key);\n    }\n\n    visitedEntities.push(input);\n\n    var processedEntity = this._processStrategy(input, parent, key);\n\n    Object.keys(this.schema).forEach(function (key) {\n      if (processedEntity.hasOwnProperty(key) && typeof processedEntity[key] === 'object') {\n        var schema = _this.schema[key];\n        processedEntity[key] = visit(processedEntity[key], processedEntity, key, schema, addEntity, visitedEntities);\n      }\n    });\n    addEntity(this, processedEntity, input, parent, key);\n    return this.getId(input, parent, key);\n  };\n\n  _proto.denormalize = function denormalize(entity, unvisit) {\n    var _this2 = this;\n\n    if (isImmutable(entity)) {\n      return denormalizeImmutable(this.schema, entity, unvisit);\n    }\n\n    Object.keys(this.schema).forEach(function (key) {\n      if (entity.hasOwnProperty(key)) {\n        var schema = _this2.schema[key];\n        entity[key] = unvisit(entity[key], schema);\n      }\n    });\n    return entity;\n  };\n\n  _createClass(EntitySchema, [{\n    key: \"key\",\n    get: function get() {\n      return this._key;\n    }\n  }, {\n    key: \"idAttribute\",\n    get: function get() {\n      return this._idAttribute;\n    }\n  }]);\n\n  return EntitySchema;\n}();\n\nvar PolymorphicSchema =\n/*#__PURE__*/\nfunction () {\n  function PolymorphicSchema(definition, schemaAttribute) {\n    if (schemaAttribute) {\n      this._schemaAttribute = typeof schemaAttribute === 'string' ? function (input) {\n        return input[schemaAttribute];\n      } : schemaAttribute;\n    }\n\n    this.define(definition);\n  }\n\n  var _proto = PolymorphicSchema.prototype;\n\n  _proto.define = function define(definition) {\n    this.schema = definition;\n  };\n\n  _proto.getSchemaAttribute = function getSchemaAttribute(input, parent, key) {\n    return !this.isSingleSchema && this._schemaAttribute(input, parent, key);\n  };\n\n  _proto.inferSchema = function inferSchema(input, parent, key) {\n    if (this.isSingleSchema) {\n      return this.schema;\n    }\n\n    var attr = this.getSchemaAttribute(input, parent, key);\n    return this.schema[attr];\n  };\n\n  _proto.normalizeValue = function normalizeValue(value, parent, key, visit, addEntity, visitedEntities) {\n    var schema = this.inferSchema(value, parent, key);\n\n    if (!schema) {\n      return value;\n    }\n\n    var normalizedValue = visit(value, parent, key, schema, addEntity, visitedEntities);\n    return this.isSingleSchema || normalizedValue === undefined || normalizedValue === null ? normalizedValue : {\n      id: normalizedValue,\n      schema: this.getSchemaAttribute(value, parent, key)\n    };\n  };\n\n  _proto.denormalizeValue = function denormalizeValue(value, unvisit) {\n    var schemaKey = isImmutable(value) ? value.get('schema') : value.schema;\n\n    if (!this.isSingleSchema && !schemaKey) {\n      return value;\n    }\n\n    var id = isImmutable(value) ? value.get('id') : value.id;\n    var schema = this.isSingleSchema ? this.schema : this.schema[schemaKey];\n    return unvisit(id || value, schema);\n  };\n\n  _createClass(PolymorphicSchema, [{\n    key: \"isSingleSchema\",\n    get: function get() {\n      return !this._schemaAttribute;\n    }\n  }]);\n\n  return PolymorphicSchema;\n}();\n\nvar UnionSchema =\n/*#__PURE__*/\nfunction (_PolymorphicSchema) {\n  _inheritsLoose(UnionSchema, _PolymorphicSchema);\n\n  function UnionSchema(definition, schemaAttribute) {\n    if (!schemaAttribute) {\n      throw new Error('Expected option \"schemaAttribute\" not found on UnionSchema.');\n    }\n\n    return _PolymorphicSchema.call(this, definition, schemaAttribute) || this;\n  }\n\n  var _proto = UnionSchema.prototype;\n\n  _proto.normalize = function normalize(input, parent, key, visit, addEntity, visitedEntities) {\n    return this.normalizeValue(input, parent, key, visit, addEntity, visitedEntities);\n  };\n\n  _proto.denormalize = function denormalize(input, unvisit) {\n    return this.denormalizeValue(input, unvisit);\n  };\n\n  return UnionSchema;\n}(PolymorphicSchema);\n\nvar ValuesSchema =\n/*#__PURE__*/\nfunction (_PolymorphicSchema) {\n  _inheritsLoose(ValuesSchema, _PolymorphicSchema);\n\n  function ValuesSchema() {\n    return _PolymorphicSchema.apply(this, arguments) || this;\n  }\n\n  var _proto = ValuesSchema.prototype;\n\n  _proto.normalize = function normalize(input, parent, key, visit, addEntity, visitedEntities) {\n    var _this = this;\n\n    return Object.keys(input).reduce(function (output, key, index) {\n      var _objectSpread2;\n\n      var value = input[key];\n      return value !== undefined && value !== null ? _objectSpread({}, output, (_objectSpread2 = {}, _objectSpread2[key] = _this.normalizeValue(value, input, key, visit, addEntity, visitedEntities), _objectSpread2)) : output;\n    }, {});\n  };\n\n  _proto.denormalize = function denormalize(input, unvisit) {\n    var _this2 = this;\n\n    return Object.keys(input).reduce(function (output, key) {\n      var _objectSpread3;\n\n      var entityOrId = input[key];\n      return _objectSpread({}, output, (_objectSpread3 = {}, _objectSpread3[key] = _this2.denormalizeValue(entityOrId, unvisit), _objectSpread3));\n    }, {});\n  };\n\n  return ValuesSchema;\n}(PolymorphicSchema);\n\nvar validateSchema = function validateSchema(definition) {\n  var isArray = Array.isArray(definition);\n\n  if (isArray && definition.length > 1) {\n    throw new Error(\"Expected schema definition to be a single schema, but found \" + definition.length + \".\");\n  }\n\n  return definition[0];\n};\n\nvar getValues = function getValues(input) {\n  return Array.isArray(input) ? input : Object.keys(input).map(function (key) {\n    return input[key];\n  });\n};\n\nvar normalize = function normalize(schema, input, parent, key, visit, addEntity, visitedEntities) {\n  schema = validateSchema(schema);\n  var values = getValues(input); // Special case: Arrays pass *their* parent on to their children, since there\n  // is not any special information that can be gathered from themselves directly\n\n  return values.map(function (value, index) {\n    return visit(value, parent, key, schema, addEntity, visitedEntities);\n  });\n};\nvar denormalize = function denormalize(schema, input, unvisit) {\n  schema = validateSchema(schema);\n  return input && input.map ? input.map(function (entityOrId) {\n    return unvisit(entityOrId, schema);\n  }) : input;\n};\n\nvar ArraySchema =\n/*#__PURE__*/\nfunction (_PolymorphicSchema) {\n  _inheritsLoose(ArraySchema, _PolymorphicSchema);\n\n  function ArraySchema() {\n    return _PolymorphicSchema.apply(this, arguments) || this;\n  }\n\n  var _proto = ArraySchema.prototype;\n\n  _proto.normalize = function normalize(input, parent, key, visit, addEntity, visitedEntities) {\n    var _this = this;\n\n    var values = getValues(input);\n    return values.map(function (value, index) {\n      return _this.normalizeValue(value, parent, key, visit, addEntity, visitedEntities);\n    }).filter(function (value) {\n      return value !== undefined && value !== null;\n    });\n  };\n\n  _proto.denormalize = function denormalize(input, unvisit) {\n    var _this2 = this;\n\n    return input && input.map ? input.map(function (value) {\n      return _this2.denormalizeValue(value, unvisit);\n    }) : input;\n  };\n\n  return ArraySchema;\n}(PolymorphicSchema);\n\nvar _normalize = function normalize(schema, input, parent, key, visit, addEntity, visitedEntities) {\n  var object = _objectSpread({}, input);\n\n  Object.keys(schema).forEach(function (key) {\n    var localSchema = schema[key];\n    var value = visit(input[key], input, key, localSchema, addEntity, visitedEntities);\n\n    if (value === undefined || value === null) {\n      delete object[key];\n    } else {\n      object[key] = value;\n    }\n  });\n  return object;\n};\n\nvar _denormalize = function denormalize(schema, input, unvisit) {\n  if (isImmutable(input)) {\n    return denormalizeImmutable(schema, input, unvisit);\n  }\n\n  var object = _objectSpread({}, input);\n\n  Object.keys(schema).forEach(function (key) {\n    if (object[key] != null) {\n      object[key] = unvisit(object[key], schema[key]);\n    }\n  });\n  return object;\n};\n\nvar ObjectSchema =\n/*#__PURE__*/\nfunction () {\n  function ObjectSchema(definition) {\n    this.define(definition);\n  }\n\n  var _proto = ObjectSchema.prototype;\n\n  _proto.define = function define(definition) {\n    this.schema = Object.keys(definition).reduce(function (entitySchema, key) {\n      var _objectSpread2;\n\n      var schema = definition[key];\n      return _objectSpread({}, entitySchema, (_objectSpread2 = {}, _objectSpread2[key] = schema, _objectSpread2));\n    }, this.schema || {});\n  };\n\n  _proto.normalize = function normalize() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _normalize.apply(void 0, [this.schema].concat(args));\n  };\n\n  _proto.denormalize = function denormalize() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return _denormalize.apply(void 0, [this.schema].concat(args));\n  };\n\n  return ObjectSchema;\n}();\n\nvar visit = function visit(value, parent, key, schema, addEntity, visitedEntities) {\n  if (typeof value !== 'object' || !value) {\n    return value;\n  }\n\n  if (typeof schema === 'object' && (!schema.normalize || typeof schema.normalize !== 'function')) {\n    var method = Array.isArray(schema) ? normalize : _normalize;\n    return method(schema, value, parent, key, visit, addEntity, visitedEntities);\n  }\n\n  return schema.normalize(value, parent, key, visit, addEntity, visitedEntities);\n};\n\nvar addEntities = function addEntities(entities) {\n  return function (schema, processedEntity, value, parent, key) {\n    var schemaKey = schema.key;\n    var id = schema.getId(value, parent, key);\n\n    if (!(schemaKey in entities)) {\n      entities[schemaKey] = {};\n    }\n\n    var existingEntity = entities[schemaKey][id];\n\n    if (existingEntity) {\n      entities[schemaKey][id] = schema.merge(existingEntity, processedEntity);\n    } else {\n      entities[schemaKey][id] = processedEntity;\n    }\n  };\n};\n\nvar schema = {\n  Array: ArraySchema,\n  Entity: EntitySchema,\n  Object: ObjectSchema,\n  Union: UnionSchema,\n  Values: ValuesSchema\n};\nvar normalize$1 = function normalize(input, schema) {\n  if (!input || typeof input !== 'object') {\n    throw new Error(\"Unexpected input given to normalize. Expected type to be \\\"object\\\", found \\\"\" + typeof input + \"\\\".\");\n  }\n\n  var entities = {};\n  var addEntity = addEntities(entities);\n  var visitedEntities = [];\n  var result = visit(input, input, null, schema, addEntity, visitedEntities);\n  return {\n    entities: entities,\n    result: result\n  };\n};\n\nvar unvisitEntity = function unvisitEntity(id, schema, unvisit, getEntity, cache) {\n  var entity = getEntity(id, schema);\n\n  if (typeof entity !== 'object' || entity === null) {\n    return entity;\n  }\n\n  if (!cache[schema.key]) {\n    cache[schema.key] = {};\n  }\n\n  if (!cache[schema.key][id]) {\n    // Ensure we don't mutate it non-immutable objects\n    var entityCopy = isImmutable(entity) ? entity : _objectSpread({}, entity); // Need to set this first so that if it is referenced further within the\n    // denormalization the reference will already exist.\n\n    cache[schema.key][id] = entityCopy;\n    cache[schema.key][id] = schema.denormalize(entityCopy, unvisit);\n  }\n\n  return cache[schema.key][id];\n};\n\nvar getUnvisit = function getUnvisit(entities) {\n  var cache = {};\n  var getEntity = getEntities(entities);\n  return function unvisit(input, schema) {\n    if (typeof schema === 'object' && (!schema.denormalize || typeof schema.denormalize !== 'function')) {\n      var method = Array.isArray(schema) ? denormalize : _denormalize;\n      return method(schema, input, unvisit);\n    }\n\n    if (input === undefined || input === null) {\n      return input;\n    }\n\n    if (schema instanceof EntitySchema) {\n      return unvisitEntity(input, schema, unvisit, getEntity, cache);\n    }\n\n    return schema.denormalize(input, unvisit);\n  };\n};\n\nvar getEntities = function getEntities(entities) {\n  var isImmutable$1 = isImmutable(entities);\n  return function (entityOrId, schema) {\n    var schemaKey = schema.key;\n\n    if (typeof entityOrId === 'object') {\n      return entityOrId;\n    }\n\n    return isImmutable$1 ? entities.getIn([schemaKey, entityOrId.toString()]) : entities[schemaKey][entityOrId];\n  };\n};\n\nvar denormalize$1 = function denormalize(input, schema, entities) {\n  if (typeof input !== 'undefined') {\n    return getUnvisit(entities)(input, schema);\n  }\n};\n\nexport { denormalize$1 as denormalize, normalize$1 as normalize, schema };\n","import {NormalizedSchema, schema} from 'normalizr';\n\nexport const header = new schema.Entity('headers', {}, {idAttribute: '_id'});\nexport const headers = new schema.Array(header);\nexport const tableHeaders = new schema.Entity('table', {\n    headers: headers\n}, {idAttribute: 'name'});\n\nexport const cell = new schema.Entity('cells', {type: header}, {idAttribute: '_id'});\nexport const cells = new schema.Array(cell);\n\nexport const row = new schema.Entity('rows', {cells: cells}, {idAttribute: '_id'})\nexport const rows = new schema.Array(row);\nexport const tableRows = new schema.Entity('table', {\n    rows: rows\n}, {idAttribute: 'name'});\n\nexport const table = new schema.Entity('table', {\n    rows: rows,\n    cells: cells,\n    headers: headers\n}, {idAttribute: 'name'});\n\n\nexport interface TableEntities {\n    table: any,\n    rows: any[],\n    cells: any[],\n    headers: any[]\n}\n\nexport interface HeadersEntities {\n    table: any,\n    headers: any[]\n}\n\nexport interface RowsEntities {\n    table: any,\n    rows: any[]\n}\n\nexport interface NormalizedTableResponse extends NormalizedSchema<TableEntities, any[]> {\n}\n\nexport interface NormalizedTableHeadersResponse extends NormalizedSchema<HeadersEntities, any[]> {\n}\n\nexport interface NormalizedTableRowsResponse extends NormalizedSchema<RowsEntities, any[]> {\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageModal\":\"ImageModal___t6eXG\",\"ImageModal__title\":\"ImageModal__title___3sDze\",\"ImageModal__content\":\"ImageModal__content___2kic5\",\"ImageModal__dropAreaWrapper\":\"ImageModal__dropAreaWrapper___3HAv9\",\"ImageModal__dropArea\":\"ImageModal__dropArea___2h12I\",\"ImageModal__buttons\":\"ImageModal__buttons___3Mdf7\",\"ImageModal__previewContainer\":\"ImageModal__previewContainer___2JtMF\",\"ImageModal__previewImage\":\"ImageModal__previewImage___JwEgn\",\"ImageModal__previewImage_spinner\":\"ImageModal__previewImage_spinner___3wZvx\",\"ImageModal__previewCroppingImage\":\"ImageModal__previewCroppingImage___3rT5Y\"};","export const GET_TABLE_ACTION = 'GET_TABLE_ACTION';\nexport const GET_TABLE_HEADERS_ACTION = 'GET_TABLE_HEADERS_ACTION';\nexport const GET_TABLE_ROWS_ACTION = 'GET_TABLE_ROWS_ACTION';\n\nexport const GET_TABLE_ROW_ACTION = 'GET_TABLE_ROW_ACTION';\n\nexport const UPDATE_TABLE_ROW_ACTION = 'UPDATE_TABLE_ROW_ACTION';\nexport const SAVE_TABLE_ROW_ACTIONS = 'SAVE_TABLE_ROW_ACTIONS';\n\nexport const DELETE_TABLE_ROW_ACTION = 'DELETE_TABLE_ROW_ACTION';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImagesPreview\":\"ImagesPreview___18FeE\",\"ImagesPreview__item\":\"ImagesPreview__item___IKTo8\",\"ImagesPreview_tableValue\":\"ImagesPreview_tableValue___3LyC6\",\"ImageGallery\":\"ImageGallery___1vHzD\",\"Item\":\"Item___2vdzm\",\"Item__image\":\"Item__image___FpQpj\",\"Item__toolbar\":\"Item__toolbar___15Fcp\",\"Item__btn\":\"Item__btn___eWMTC\",\"SingleImage__uploadBtn\":\"SingleImage__uploadBtn___1YddE\",\"SingleImage__uploadBtn_section\":\"SingleImage__uploadBtn_section___3cewP\"};","import * as React from 'react';\nimport {Cell, Locale} from '../../schema/models';\n\nimport Value from './value.component';\n\nexport interface CellProps {\n    cell: Cell,\n    isEditMode?: boolean\n    changeCell?: (cellId: string, value: any, locale?: Locale) => void,\n    notLocalized?: boolean,\n    locale: Locale,\n    isTableValue?:boolean\n}\n\nconst Cell = ({changeCell, cell, ...rest}: CellProps) => {\n    const changeValue = (value: any, locale?: Locale) => {\n        changeCell(cell.header._id, value, locale);\n    };\n    const value = cell && cell.value || '';\n    const type = cell.header.type;\n\n    return <Value type={type} value={value} changeValue={changeValue} properties={cell.header.properties} {...rest}/>;\n};\n\nexport default Cell;\n","import * as _ from 'lodash';\nimport {Locale} from '../../../schema/models';\nimport {DEFAULT_LOCALE} from '../../../../../config/locales';\n\nexport const getValue = (value: any, locale?: Locale) => {\n    return !locale\n        ? value || ''\n        // @ts-ignore\n        : _.isObject(value) ? value[locale.key] || value[DEFAULT_LOCALE.key] || '' : value || ''\n};\n\nexport const getValueAsArray = (value: any, locale: Locale) => {\n    return !locale\n        ? value || []\n        // @ts-ignore\n        : _.isObject(value) ? value[locale.key] || value[DEFAULT_LOCALE.key] || [] : value || []\n};\n\n","import * as React from 'react';\nimport {ValueRenderProps} from './value.component';\nimport {ChangeEvent} from 'react';\nimport {getValue} from './helpers/utilities';\nimport {DEFAULT_LOCALE} from '../../../../config/locales'\n\nconst InputValue = ({value, isEditMode, changeValue, locale, notLocalized}: ValueRenderProps) => {\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n        changeValue(e.target.value, !notLocalized ? locale : undefined);\n    };\n\n    console.log(notLocalized, value, locale.key);\n    const localizedValue = getValue(value, !notLocalized ? locale : undefined);\n    return !isEditMode || (notLocalized && DEFAULT_LOCALE.key !== locale.key)\n        ? localizedValue\n        : <input type=\"text\" value={localizedValue} onChange={onChange} className=\"input\"/>\n};\n\nexport default InputValue;\n","import axios from 'axios';\n\n\nconst API_URL_PREFIX = '/api/cloudinary';\n\nconst clientApi = axios.create({\n    baseURL: window.location.origin\n});\n\n// UPLOAD IMAGE\nexport function uploadImage(body: any) {\n    return clientApi.post(`${API_URL_PREFIX}/image-upload`, body);\n}\n","import * as React from 'react';\nimport {Fragment} from 'react';\nimport {useState} from 'react';\nimport {Crop} from 'react-image-crop';\nimport * as styles from './image-modal.component.styles.css';\nimport * as ReactCropModule from 'react-image-crop';\nimport {useEffect} from 'react';\nimport Spinner from '../../../../../common/elements/spinner.component';\n\ninterface ImageUploaderWithCroppingProps {\n    src: any,\n    aspectRatio: number,\n    initWidth?: number,\n    toggleModal: () => void,\n    ChangePreviewButtonRenderer: any,\n    changeUploadingImageStatus: (status: boolean) => void,\n    saveImageInCloudinary: (imageFile: any) => void,\n    isUploadingImage: boolean\n}\n\nexport default ({\n                    aspectRatio,\n                    initWidth = 50,\n                    src,\n                    ChangePreviewButtonRenderer,\n                    changeUploadingImageStatus,\n                    saveImageInCloudinary,\n                    toggleModal,\n                    isUploadingImage\n                }: ImageUploaderWithCroppingProps) => {\n\n    const [crop, changeCrop] = useState<Crop>({\n        aspect: aspectRatio,\n        width: initWidth,\n        x: 0,\n        y: 0\n    });\n\n    useEffect(() =>\n        changeCrop({...crop, aspect: aspectRatio}), [aspectRatio]);\n\n    const [pixelCrop, changePixelCrop] = useState(null);\n\n\n    const onSaveImage = () => {\n        changeUploadingImageStatus(true);\n        const canvas = document.createElement('canvas');\n\n        const image = document.createElement('img');\n        image.src = src;\n\n        const {height, width} = image;\n        canvas.width = pixelCrop.width * width / 100;\n        canvas.height = pixelCrop.height * height / 100;\n\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(\n            image,\n            pixelCrop.x * width / 100,\n            pixelCrop.y * height / 100,\n            pixelCrop.width * width / 100,\n            pixelCrop.height * height / 100,\n            0,\n            0,\n            pixelCrop.width * width / 100,\n            pixelCrop.height * height / 100\n        );\n\n        canvas.toBlob((blob: any) => {\n            blob.name = 'crop.img';\n            blob.lastModifiedDate = new Date();\n            saveImageInCloudinary(blob);\n        }, 'image/jpeg');\n    };\n\n    const onCropChange = (newCrop: Crop) => {\n        changeCrop({...crop, ...newCrop});\n    };\n\n    const onCropComplete = (newCrop: Crop, pixelCrops?: any) => {\n        changePixelCrop(pixelCrops);\n    };\n\n    const ReactCrop = (ReactCropModule as any).default;\n\n    return (\n        <Fragment>\n            {src && (\n                <div className={styles.ImageModal__previewCroppingImage}>\n                    <ReactCrop\n                        src={src}\n                        crop={crop}\n                        onChange={onCropChange}\n                        onComplete={onCropComplete}\n                        keepSelection={true}\n                        imageStyle={{width: '100%', maxHeight: 'none'}}\n                        className={styles.ImageModal__previewContainer}\n                    />\n                    {isUploadingImage && <Spinner className={styles.ImageModal__previewImage_spinner}/>}\n                </div>\n            )}\n            <div className={styles.ImageModal__buttons}>\n                {src && (\n                    <Fragment>\n                        <ChangePreviewButtonRenderer disabled={isUploadingImage}/>\n                        <button className=\"button\" onClick={onSaveImage} disabled={isUploadingImage}>Сохранить</button>\n                    </Fragment>\n                )}\n                <button onClick={toggleModal} className=\"button\" disabled={isUploadingImage}>Отменить</button>\n            </div>\n        </Fragment>\n    );\n}\n","import * as React from 'react';\nimport {Fragment} from 'react';\nimport * as styles from './image-modal.component.styles.css';\nimport b64ImageToBlob from '../../../../../utilities/b64ImageToBlob';\nimport Spinner from '../../../../../common/elements/spinner.component';\ninterface ImageUploaderProps {\n    src: any,\n    ChangePreviewButtonRenderer: any,\n    toggleModal: () => void,\n    saveImageInCloudinary: (imageFile: any) => void,\n    isUploadingImage: boolean\n}\n\nexport default ({\n                    src,\n                    ChangePreviewButtonRenderer,\n                    toggleModal,\n                    saveImageInCloudinary,\n                    isUploadingImage\n                }: ImageUploaderProps) => {\n    const onSaveImage = () => {\n        b64ImageToBlob(src)\n            .then(blob => saveImageInCloudinary(blob));\n    };\n\n    return (\n        <Fragment>\n            {src && (\n                <div className={styles.ImageModal__previewImage}\n                     style={{\n                         backgroundImage: `url(${src})`\n                     }}>\n                    {isUploadingImage && <Spinner className={styles.ImageModal__previewImage_spinner}/>}\n                </div>\n            )}\n            <div className={styles.ImageModal__buttons}>\n                {src && (\n                    <Fragment>\n                        <ChangePreviewButtonRenderer disabled={isUploadingImage}/>\n                        <button className=\"button\" onClick={onSaveImage} disabled={isUploadingImage}>Сохранить</button>\n                    </Fragment>\n                )}\n                <button onClick={toggleModal} className=\"button\" disabled={isUploadingImage}>Отменить</button>\n            </div>\n        </Fragment>\n    );\n}\n","export default async (b64Image: any) => {\n    const response = await fetch(b64Image);\n    const blob = await response.blob();\n    return blob;\n}\n","import * as  React from 'react';\nimport {useState, ChangeEvent} from 'react';\nimport {Modal} from 'reactstrap';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport * as api from '../../../../../service/api';\nimport cn from 'classnames';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as styles from './image-modal.component.styles.css';\nimport '../../../../../styles.css';\n\nimport ImageUploaderWithCropping from './image-uploader-with-cropping.component';\nimport ImageUploader from './image-uploader.component';\n\ninterface ImageModalProps {\n    isOpen: boolean,\n    properties?: any,\n    toggleModal: () => void,\n    saveImage: (image: string) => void\n}\n\nexport default ({toggleModal, saveImage, isOpen, properties}: ImageModalProps) => {\n    const [src, changeSrc] = useState<any>(null);\n    const [isUploadingImage, changeUploadingImageStatus] = useState<boolean>(false);\n\n    const aspectRatio = properties && properties.aspectRatio;\n\n    const changePreview = (e: ChangeEvent<HTMLInputElement>) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            return changeSrc(reader.result);\n        };\n\n        const target = e.target as HTMLInputElement;\n        const fileList = target.files as FileList;\n        reader.readAsDataURL(fileList[0]);\n    };\n\n    const changePreviewBtn = (title: string, disabled?: boolean) => (\n        <div className={cn('inputFileBtn', {'inputFileBtn_disabled': disabled})}>\n            <input type=\"file\" onChange={changePreview}/>\n            {title}\n        </div>\n    );\n\n    const onToggleModal = () => {\n        if (isOpen === true) {\n            changeSrc(null);\n            changeUploadingImageStatus(false);\n        }\n        toggleModal();\n    };\n\n    const saveImageInCloudinary = (imageFile: any) => {\n        changeUploadingImageStatus(true);\n        const formData = new FormData();\n        formData.append('0', imageFile);\n\n        api.uploadImage(formData)\n            .then(res => {\n                saveImage(res.data[0].url);\n                changeUploadingImageStatus(true);\n                onToggleModal();\n            })\n            .catch(e => {\n                changeUploadingImageStatus(true);\n            });\n    };\n\n    const ChangePreviewButtonRenderer = (props: any) => changePreviewBtn('Изменить изображение', props.disabled);\n\n    return (\n        <Modal isOpen={isOpen}\n               size=\"lg\"\n               toggle={toggleModal}\n               onClosed={() => {\n               }}\n               className={styles.ImageModal}\n        >\n            <div className={styles.ImageModal__title}>\n                Редактирование изображения\n            </div>\n            <div className={styles.ImageModal__content}>\n                {!src && (\n                    <div className={styles.ImageModal__dropAreaWrapper}>\n                        <div className={styles.ImageModal__dropArea}>\n                            {changePreviewBtn('Выбрать изображение')}\n                        </div>\n                    </div>\n                )}\n                {aspectRatio\n                    ? <ImageUploaderWithCropping\n                        src={src}\n                        aspectRatio={aspectRatio}\n                        initWidth={50}\n                        toggleModal={onToggleModal}\n                        changeUploadingImageStatus={changeUploadingImageStatus}\n                        ChangePreviewButtonRenderer={ChangePreviewButtonRenderer}\n                        saveImageInCloudinary={saveImageInCloudinary}\n                        isUploadingImage={isUploadingImage}\n                    />\n                    : <ImageUploader\n                        src={src}\n                        ChangePreviewButtonRenderer={ChangePreviewButtonRenderer}\n                        toggleModal={onToggleModal}\n                        saveImageInCloudinary={saveImageInCloudinary}\n                        isUploadingImage={isUploadingImage}\n                    />\n                }\n\n            </div>\n        </Modal>);\n}\n","import * as  React from 'react';\nimport {Modal} from 'reactstrap';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as styles from './image-modal.component.styles.css';\nimport '../../../../../styles.css';\n\ninterface ImagePreviewModalProps {\n    isOpen: boolean,\n    toggleModal: () => void,\n    srcImage: string\n}\n\nexport default ({toggleModal, isOpen, srcImage}: ImagePreviewModalProps) => {\n    return (\n        <Modal isOpen={isOpen}\n               size=\"lg\"\n               toggle={toggleModal}\n        >\n            <div className={styles.ImageModal__title}>\n                Просмотр изображения\n            </div>\n            <div className={styles.ImageModal__content}>\n                <div className={styles.ImageModal__previewImage}\n                     style={{backgroundImage: `url(${srcImage})`}}>\n                </div>\n                <div className={styles.ImageModal__buttons}>\n                    <button className=\"button\" onClick={() => toggleModal()}>Закрыть</button>\n                </div>\n            </div>\n        </Modal>);\n}\n","import * as React from 'react';\nimport {useState} from 'react';\nimport cn from 'classnames';\nimport {ValueRenderProps} from './value.component';\nimport * as styles from './value-single-image.component.styles.css';\nimport ModalImageEditor from './helpers/image-modal.component';\nimport ModalPreviewImage from './helpers/image-preview-modal.component';\nimport {getValueAsArray} from './helpers/utilities';\nimport {DEFAULT_LOCALE} from '../../../../config/locales';\n\n\ninterface ImageGalleryValueProps extends ValueRenderProps {\n    isSingleImage?: boolean\n}\n\nconst SingleImageValue = ({\n                              value,\n                              locale,\n                              isEditMode,\n                              changeValue,\n                              notLocalized,\n                              isSingleImage,\n                              properties,\n                              isTableValue,\n                          }: ImageGalleryValueProps) => {\n    const [isOpenModalImageEditor, toggleModalImageEditor] = useState(false);\n    const [isOpenModalPreviewImage, toggleModalPreviewImage] = useState(false);\n    const [srcImagePreview, changeSrcImagePreview] = useState('');\n\n    const valueLocale = !notLocalized ? locale : undefined;\n    const images = getValueAsArray(value, valueLocale);\n    const aspectRatio = properties && properties.aspectRatio;\n\n    const saveImage = (imageUrl: string) => {\n        changeValue(images.concat(imageUrl), valueLocale);\n    };\n\n    const deleteImage = (imageIndex: number) => {\n        changeValue(images.filter((image: any, i: number) => i !== imageIndex), valueLocale);\n    };\n\n    const renderImageGalleryInPreviewMode = () => {\n        return (\n            images.length === 0\n                ? (<div>Изображение не задано</div>)\n                : (\n                    <div className={cn(\n                        styles.ImagesPreview, {[styles.ImagesPreview_tableValue]: isTableValue})}>\n                        {images.map((image: any, i: number) => {\n                            return (\n                                <div className={styles.ImagesPreview__item}\n                                     key={i}\n                                     onClick={() => {\n                                         changeSrcImagePreview(image);\n                                         toggleModalPreviewImage(true);\n                                     }}\n                                     style={{\n                                         backgroundImage: `url(${image})`\n                                     }}\n                                >\n                                </div>\n                            );\n                        })}\n                        <ModalPreviewImage isOpen={isOpenModalPreviewImage}\n                                           toggleModal={() => toggleModalPreviewImage(!isOpenModalPreviewImage)}\n                                           srcImage={srcImagePreview}\n                        />\n                    </div>\n                )\n        );\n    };\n\n    const renderImageGalleryInEditMode = () => {\n        return (\n            <div className={styles.ImageGallery}>\n                {images.map((image: any, i: number) => {\n                    return (\n                        <div className={styles.Item}>\n                            <div className={styles.Item__image}\n                                 style={{\n                                     backgroundImage: `url(${image})`\n                                 }}>\n                            </div>\n                            <div className={styles.Item__toolbar}>\n                                <button className={styles.Item__btn}\n                                        onClick={() => {\n                                            changeSrcImagePreview(image);\n                                            toggleModalPreviewImage(true);\n                                        }}>\n                                    Просмотр\n                                </button>\n                                <button className={styles.Item__btn}\n                                        onClick={() => {\n                                            deleteImage(i);\n                                        }}>\n                                    Удалить\n                                </button>\n                            </div>\n                        </div>\n                    );\n                })}\n                {(!isSingleImage || (isSingleImage && images.length === 0)) && (\n                    <button\n                        className={cn(styles.SingleImage__uploadBtn, {\n                            [styles.SingleImage__uploadBtn_section]: images.length !== 0\n                        })}\n                        onClick={() => toggleModalImageEditor(!isOpenModalImageEditor)}>\n                        Загрузить изображение\n                    </button>\n                )}\n                <ModalImageEditor isOpen={isOpenModalImageEditor}\n                                  properties={properties}\n                                  toggleModal={() => toggleModalImageEditor(!isOpenModalImageEditor)}\n                                  saveImage={saveImage}\n                />\n                <ModalPreviewImage isOpen={isOpenModalPreviewImage}\n                                   toggleModal={() => toggleModalPreviewImage(!isOpenModalPreviewImage)}\n                                   srcImage={srcImagePreview}\n                />\n            </div>\n        );\n    };\n\n\n    return !isEditMode || (notLocalized && DEFAULT_LOCALE.key !== locale.key)\n        ? renderImageGalleryInPreviewMode()\n        : renderImageGalleryInEditMode();\n};\n\nexport default SingleImageValue;\n","import * as React from 'react';\nimport {Component} from 'react';\nimport * as tinymce from 'tinymce';\nimport {Editor} from '@tinymce/tinymce-react';\n\n// @ts-ignore\ntinymce.baseURL = '/sources/tinymce';\n\n\ninterface EditorProps {\n    value?: string,\n    onChange?: (value: string) => void\n}\n\ninterface EditorState {\n    content: string\n}\n\nexport default class EditorComponent extends Component<EditorProps, EditorState> {\n    constructor(props: EditorProps) {\n        super(props);\n        this.state = {\n            content: props.value\n        }\n    }\n\n    onChange = (e: any) => {\n        this.props.onChange(e.target.getContent());\n    };\n\n\n    render() {\n        return (\n            <div>\n                <Editor\n                    value={this.state.content}\n                    init={{\n                        menubar: false,\n                        branding: false,\n                        statusbar: false,\n                        removeformat: [\n                            {selector: '*', remove: 'all'}\n                        ]\n                    }}\n                    plugins='table textcolor colorpicker link anchor paste'\n                    toolbar={\n                        'undo redo | removeformat | bold italic underline strikethrough | subscript superscript | ' +\n                        'table  quicklink blockquote | ' +\n                        ' forecolor backcolor forecolorpicker | link anchor |  ' +\n                        'alignleft alignright aligncenter alignjustify | ' +\n                        'bullist numlist | fullscreen preview'\n                    }\n                    onChange={this.onChange}/>\n            </div>\n        );\n    }\n}\n","import * as React from 'react';\nimport {ValueRenderProps} from './value.component';\nimport Editor from '../../../../common/elements/editor.component';\nimport {getValue} from './helpers/utilities';\n\nconst TeaxtareaValue = ({value, isEditMode, changeValue, locale}: ValueRenderProps) => {\n    const localizedValue = getValue(value, locale);\n    return isEditMode\n        ? <Editor value={localizedValue} onChange={(value => changeValue(value, locale))}/>\n        : <div dangerouslySetInnerHTML={{__html: localizedValue}}></div>;\n};\n\nexport default TeaxtareaValue;\n","import * as React from 'react';\nimport {ValueRenderProps} from './value.component';\nimport {ChangeEvent} from 'react';\nimport {getValue} from './helpers/utilities';\nimport {DEFAULT_LOCALE} from '../../../../config/locales'\n\nconst InputValue = ({value, isEditMode, changeValue}: ValueRenderProps) => {\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n        changeValue(e.target.value);\n    };\n\n    const localizedValue = getValue(value);\n    return !isEditMode\n        ? localizedValue\n        : <input type=\"date\" value={localizedValue} onChange={onChange} className=\"input\"/>\n};\n\nexport default InputValue;\n","import * as React from 'react';\nimport InputValue from './value-input.component';\nimport SingleImageCell from './value-single-image.component';\nimport TextareaValue from './value-textarea.component';\nimport DateValue from './value-date.component';\nimport {Locale} from '../../schema/models';\n\nexport interface ValueRenderProps {\n    value: any,\n    isEditMode?: boolean,\n    changeValue?: (value: any, locale?: Locale) => void,\n    locale: Locale,\n    properties?: any,\n    notLocalized?: boolean,\n    isTableValue?:boolean\n}\nexport interface ValueProps extends ValueRenderProps{\n    type: string\n}\n\nexport default ({type, ...rest}: ValueProps) => {\n    switch (type) {\n        case 'DATE':\n            return <DateValue {...rest}/>;\n        case 'INPUT':\n            return <InputValue  {...rest}/>;\n        case 'IMAGE':\n            return <SingleImageCell {...rest} isSingleImage={true}/>;\n        case 'TEXTAREA':\n            return <TextareaValue {...rest}/>;\n        case 'IMAGE_GALLERY':\n            return <SingleImageCell {...rest}/>\n        default:\n            throw Error(`Invalid header type ${type}`);\n    }\n}\n","import {Reducer} from 'redux';\nimport * as _ from 'lodash';\nimport {\n    GET_TABLE_ACTION,\n    GET_TABLE_HEADERS_ACTION,\n    GET_TABLE_ROW_ACTION,\n    GET_TABLE_ROWS_ACTION,\n    SAVE_TABLE_ROW_ACTIONS,\n    UPDATE_TABLE_ROW_ACTION,\n    DELETE_TABLE_ROW_ACTION\n} from '../actions/types';\nimport {Params} from '../actions/actions';\n\nimport {AsyncAction, AsyncActionStatus, SucceededAsyncAction} from '../../../../utilities/asyncActions';\nimport {NormalizedTableResponse, NormalizedTableHeadersResponse, NormalizedTableRowsResponse} from '../../schema/table';\n\ntype GetTableActionSuccess = SucceededAsyncAction<typeof GET_TABLE_ACTION, NormalizedTableResponse, Params>;\ntype GetTableHeadersActionSuccess = SucceededAsyncAction<typeof GET_TABLE_HEADERS_ACTION, NormalizedTableHeadersResponse, Params>;\n\ntype GetTableRowsActionSuccess = SucceededAsyncAction<typeof GET_TABLE_ROWS_ACTION, NormalizedTableRowsResponse, Params>;\ntype GetTableRowActionSuccess = SucceededAsyncAction<typeof GET_TABLE_ROW_ACTION, NormalizedTableRowsResponse, Params>;\ntype SaveTableRowActionSuccess = SucceededAsyncAction<typeof SAVE_TABLE_ROW_ACTIONS, NormalizedTableRowsResponse, Params>;\ntype UpdateTableRowActionSuccess = SucceededAsyncAction<typeof UPDATE_TABLE_ROW_ACTION, NormalizedTableRowsResponse, Params>;\ntype TableRowActions =\n    GetTableRowsActionSuccess\n    | GetTableRowActionSuccess\n    | SaveTableRowActionSuccess\n    | UpdateTableRowActionSuccess;\n\ntype DeleteTableActionSuccess = SucceededAsyncAction<typeof DELETE_TABLE_ROW_ACTION, any, Params>;\n\nconst tables: Reducer<any, AsyncAction<any, any>> = (state = {}, action) => {\n    if (action.type === GET_TABLE_ACTION) {\n        switch (action.status) {\n            case AsyncActionStatus.SUCCEEDED:\n                return requestTableSuccess(state, action as GetTableActionSuccess);\n            default:\n                return state;\n        }\n    }\n    if (action.type === GET_TABLE_HEADERS_ACTION) {\n        switch (action.status) {\n            case AsyncActionStatus.SUCCEEDED:\n                return requestTableHeadersSuccess(state, action as GetTableHeadersActionSuccess);\n            default:\n                return state;\n        }\n    }\n    if (action.type === GET_TABLE_ROWS_ACTION ||\n        action.type === GET_TABLE_ROW_ACTION ||\n        action.type === SAVE_TABLE_ROW_ACTIONS ||\n        action.type === UPDATE_TABLE_ROW_ACTION) {\n        switch (action.status) {\n            case AsyncActionStatus.SUCCEEDED:\n                return requestTableRowsSuccess(state, action as TableRowActions);\n            default:\n                return state;\n        }\n    }\n\n    if (action.type === DELETE_TABLE_ROW_ACTION) {\n        switch (action.status) {\n            case AsyncActionStatus.SUCCEEDED:\n                return requestDeleteTableRowSuccess(state, action as DeleteTableActionSuccess);\n            default:\n                return state;\n        }\n    }\n\n    return state;\n};\n\nexport default tables;\n\nconst requestTableSuccess = (state: any, action: GetTableActionSuccess) => {\n    const {entities} = action.payload;\n    const {tableName} = action.params;\n    return {\n        ...state,\n        [tableName]: {\n            ...entities,\n            headerIds: entities.table[tableName].headers,\n            rowIds: entities.table[tableName].rows\n        }\n    };\n};\n\nconst requestTableHeadersSuccess = (state: any, action: GetTableHeadersActionSuccess) => {\n    const {entities} = action.payload;\n    const {tableName} = action.params;\n    return {\n        ...state,\n        [tableName]: {\n            ...state[tableName],\n            ...entities,\n            headerIds: entities.table[tableName].headers\n        }\n    };\n};\n\nconst requestTableRowsSuccess = (state: any, action: TableRowActions) => {\n    const {entities} = action.payload;\n    const {tableName} = action.params;\n    return {\n        ...state,\n        [tableName]: {\n            ...state[tableName],\n            ...entities,\n            rowIds: entities.table[tableName].rows\n        }\n    };\n};\n\nconst requestDeleteTableRowSuccess = (state: any, action: DeleteTableActionSuccess) => {\n    const {tableName, rowId} = action.params;\n    return {\n        ...state,\n        [tableName]: {\n            ...state[tableName],\n            rowIds: state[tableName].rowIds.filter((id: string) => id !== rowId)\n        }\n    };\n};\n\n//selectors\nexport const getTable = (state: any, tableName: string) => state[tableName];\n\nexport const getTableMeta = (state: any, tableName: string) => {\n    const tableMeta = getTable(state, tableName);\n    return tableMeta\n        ? tableMeta.table[tableName]\n        : {\n            name: tableName,\n            title: ''\n        };\n};\n\nexport const getTableHeaders = (state: any, tableName: string) => {\n    const tableMeta = getTable(state, tableName);\n    return _.get(tableMeta, 'headerIds', [])\n        .map((headerKey: any) => tableMeta.headers[headerKey]);\n};\n\nexport const getTableRows = (state: any, tableName: string) => {\n    const tableMeta = getTable(state, tableName);\n    return _.get(tableMeta, 'rowIds', [])\n        .map((rowKey: any) => tableMeta.rows[rowKey])\n        .map((row: any) => ({\n            ...row,\n            cells: row.cells.map((cellKey: any) => {\n                const cell = tableMeta.cells[cellKey];\n                return {\n                    ...cell,\n                    type: tableMeta.headers[cell.header]\n                };\n            })\n        }));\n};\n\n\nexport const getTableRow = (state: any, tableName: string, rowId: string) => {\n    const tableMeta = getTable(state, tableName);\n\n    const row = _.get(tableMeta, `rows.${rowId}`);\n    return row\n        ? {\n            ...row,\n            cells: row.cells.map((cellKey: any) => {\n                const cell = tableMeta.cells[cellKey];\n                return {\n                    ...cell,\n                    type: tableMeta.headers[cell.header]\n                };\n            })\n        }\n        : undefined;\n};\n","import tables, * as fromTables from './tables';\nimport {combineReducers} from 'redux';\nimport {AsyncAction} from '../../../../utilities/asyncActions';\nimport {GET_TABLE_ACTION, GET_TABLE_HEADERS_ACTION, GET_TABLE_ROWS_ACTION} from '../actions/types';\nimport {MODULE_NAME} from '../../constants';\n\nconst asyncStatuses = (state: any = {}, action: AsyncAction<typeof GET_TABLE_ACTION>) => {\n    if (\n        action.type === GET_TABLE_ACTION\n        || action.type === GET_TABLE_HEADERS_ACTION\n        || action.type === GET_TABLE_ROWS_ACTION\n    ) {\n        return {...state, [action.type]: action.status};\n    }\n    return state;\n};\n\nconst rootReducer = combineReducers({\n    tables,\n    asyncStatuses\n});\n\nexport default rootReducer;\n\nexport type TableModuleState = ReturnType<typeof rootReducer>;\n\n\n// selectors\nexport const getTable = (state: any, tableName: string) => fromTables.getTable(state[MODULE_NAME].tables, tableName);\nexport const getTableMeta  =(state: any, tableName: string) => fromTables.getTableMeta(state[MODULE_NAME].tables, tableName);\nexport const getTableHeaders = (state:any, tableName: string) => fromTables.getTableHeaders(state[MODULE_NAME].tables, tableName);\nexport const getTableRows = (state:any, tableName: string) => fromTables.getTableRows(state[MODULE_NAME].tables, tableName);\nexport const getTableRow = (state:any, tableName: string, rowId: string) => fromTables.getTableRow(state[MODULE_NAME].tables, tableName, rowId);\n\nexport const getAsyncTaskStatuses = (state: any) => state[MODULE_NAME].asyncStatuses;\n\n\nexport const isLoadingTasks = (state: any, tasks: string[]) => {\n    return tasks.some(actionKey => state[MODULE_NAME].asyncStatuses[actionKey] === 'STARTED')\n}\n","import * as React from 'react';\nimport Spinner from '../elements/spinner.component';\n\ninterface WithSpinnerRenderPropsComponentProps {\n    isLoading: boolean,\n    children: () => JSX.Element\n}\n\nexport default ({isLoading, children}: WithSpinnerRenderPropsComponentProps) =>\n    isLoading\n        ? <Spinner/>\n        : children();\n\n","import axios from 'axios';\nimport {Row} from '../schema/models';\n\n\nconst API_URL_PREFIX = '/api';\n\nconst clientApi = axios.create({\n    baseURL: window.location.origin\n});\n\n// MODULE TABLE\nconst MODULE_TABLE_DOMAIN = 'tables';\n\nexport function getTable(tableName: string): Promise<any> {\n    return clientApi.get(`/api/${MODULE_TABLE_DOMAIN}/${tableName}`);\n}\n\nexport function getTableHeaders(tableName: string) {\n    console.log('URLLLS --->', window.location.origin, window.location);\n    console.log(`/api/${MODULE_TABLE_DOMAIN}/${tableName}/headers`);\n    console.log(tableName)\n    return clientApi.get(`/api/${MODULE_TABLE_DOMAIN}/${tableName}/headers`);\n}\n\nexport function getTableRows(tableName: string) {\n    return clientApi.get(`/api/${MODULE_TABLE_DOMAIN}/${tableName}/rows`);\n}\n\nexport function getTableRow(tableName: string, rowId: string) {\n    return clientApi.get(`/api/${MODULE_TABLE_DOMAIN}/${tableName}/rows/${rowId}`);\n}\n\nexport function saveTableRow(tableName: string, row: Row) {\n    return clientApi.post(`/api/${MODULE_TABLE_DOMAIN}/${tableName}/rows`, row);\n}\n\nexport function updateTableRow(tableName: string, idRow: string, row: Row) {\n    return clientApi.put(`/api/${MODULE_TABLE_DOMAIN}/${tableName}/rows/${idRow}`, row);\n\n}\n\nexport function deleteTableRow(tableName: string, idRow: string) {\n    return clientApi.delete(`/api/${MODULE_TABLE_DOMAIN}/${tableName}/rows/${idRow}`);\n}\n\nexport function uploadImage(body: any) {\n    return clientApi.post(`/api/cloudinary/image-upload`, body);\n}\n","import * as api from '../../service/api';\nimport {asyncActionCreator} from '../../../../utilities/asyncActions';\nimport {\n    table,\n    tableHeaders,\n    NormalizedTableHeadersResponse,\n    NormalizedTableResponse,\n    NormalizedTableRowsResponse\n} from '../../schema/table';\nimport {normalize} from 'normalizr';\nimport {\n    GET_TABLE_ACTION,\n    GET_TABLE_HEADERS_ACTION,\n    GET_TABLE_ROW_ACTION,\n    GET_TABLE_ROWS_ACTION,\n    UPDATE_TABLE_ROW_ACTION,\n    SAVE_TABLE_ROW_ACTIONS,\n    DELETE_TABLE_ROW_ACTION\n} from './types';\nimport {Row} from '../../schema/models';\n\nexport const MODULE_NAME = 'tableModule';\n\nexport type Params = {\n    moduleName: string,\n    tableName: string,\n    rowId?: string,\n}\n\nexport function getTable(tableName: string) {\n    return asyncActionCreator<typeof GET_TABLE_ACTION, NormalizedTableResponse, Params>(\n        GET_TABLE_ACTION,\n        api.getTable(tableName)\n            .then(response => {\n                return normalize(response.data, table);\n            }),\n        {tableName, moduleName: MODULE_NAME}\n    );\n}\n\nexport function getTableHeaders(tableName: string) {\n    return asyncActionCreator<typeof GET_TABLE_HEADERS_ACTION, NormalizedTableHeadersResponse, Params>(\n        GET_TABLE_HEADERS_ACTION,\n        api.getTableHeaders(tableName)\n            .then(response => {\n                return normalize(response.data, tableHeaders);\n            }),\n        {tableName, moduleName: MODULE_NAME}\n    );\n}\n\nexport function getTableRows(tableName: string) {\n    return asyncActionCreator<typeof GET_TABLE_ROWS_ACTION, NormalizedTableRowsResponse, Params>(\n        GET_TABLE_ROWS_ACTION,\n        api.getTableRows(tableName)\n            .then(response => {\n                return normalize(response.data, table);\n            }),\n        {tableName, moduleName: MODULE_NAME}\n    );\n}\n\nexport function getTableRow(tableName: string, rowId: string) {\n    return asyncActionCreator<typeof GET_TABLE_ROW_ACTION, NormalizedTableRowsResponse, Params>(\n        GET_TABLE_ROW_ACTION,\n        api.getTableRow(tableName, rowId)\n            .then(response => {\n                return normalize(response.data, table);\n            }),\n        {tableName, rowId, moduleName: MODULE_NAME}\n    );\n}\n\nexport function saveTableRow(tableName: string, row: Row) {\n    return asyncActionCreator<typeof SAVE_TABLE_ROW_ACTIONS, NormalizedTableRowsResponse, Params>(\n        SAVE_TABLE_ROW_ACTIONS,\n        api.saveTableRow(tableName, row)\n            .then(response => normalize(response.data, table)),\n        {tableName, moduleName: MODULE_NAME}\n    );\n}\n\nexport function updateTableRow(tableName: string, rowId: string, row: Row) {\n    return asyncActionCreator<typeof UPDATE_TABLE_ROW_ACTION, NormalizedTableRowsResponse, Params>(\n        UPDATE_TABLE_ROW_ACTION,\n        api.updateTableRow(tableName, rowId, row)\n            .then(response => normalize(response.data, table)),\n        {tableName, rowId, moduleName: MODULE_NAME}\n    );\n}\n\nexport function deleteTableRow(tableName: string, rowId: string) {\n    return asyncActionCreator<typeof DELETE_TABLE_ROW_ACTION, any, Params>(\n        DELETE_TABLE_ROW_ACTION,\n        api.deleteTableRow(tableName, rowId),\n        {tableName, rowId, moduleName: MODULE_NAME}\n    )\n}\n"],"sourceRoot":""}