{"version":3,"sources":["webpack:///./src/modules/properties/store/actions/types.tsx","webpack:///./src/modules/properties/store/reducers/properties.tsx","webpack:///./src/modules/properties/store/reducers/index.tsx"],"names":["__webpack_require__","d","__webpack_exports__","GET_PROPERTIES","UPDATE_PROPERTIES","requestProperties","state","action","payload","requestUpdateProperties","reducers_properties","type","types","status","asyncActions","SUCCEEDED","reducers_getProperties","rootReducer","Object","redux","properties","getProperties","constants"],"mappings":"2FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAO,IAAMD,EAAiB,iBACjBC,EAAoB,0FC+B3BC,EAAoB,SAACC,EAAmBC,GAC1C,OAAOA,EAAOC,SAEZC,EAA0B,SAACH,EAAmBC,GAChD,OAAOA,EAAOC,SAGHE,EA5BgD,SAACJ,EAAYC,GACxE,QAD4D,IAAAD,MAAA,IACxDC,EAAOI,OAASC,EAAA,EAChB,OAAQL,EAAOM,QACX,KAAKC,EAAA,EAAkBC,UACnB,OAAOV,EAAkBC,EAAOC,GACpC,QACI,OAAOD,EAGnB,GAAIC,EAAOI,OAASC,EAAA,EAChB,OAAQL,EAAOM,QACX,KAAKC,EAAA,EAAkBC,UACnB,OAAON,EAAwBH,EAAOC,GAC1C,QACI,OAAOD,EAInB,OAAOA,YC7BXN,EAAAC,EAAAC,EAAA,kCAAAc,IAKA,IAAMC,EAAcC,OAAAC,EAAA,gBAAAD,CAAgB,CAChCE,WAAUV,IAODM,GAJEd,EAAA,UAIc,SAACI,GAC1B,OD6ByB,SAACA,GAC1B,OAAOA,EC9BPe,CAA+Bf,EAAMgB,EAAA,GAAaF","file":"31.bundle.js","sourcesContent":["export const GET_PROPERTIES = 'GET_PROPERTIES';\nexport const UPDATE_PROPERTIES = 'UPDATE_PROPERTIES';\n","import {Reducer} from 'redux';\nimport {AsyncAction, AsyncActionStatus, SucceededAsyncAction} from '../../../../utilities/asyncActions';\n\n\nimport {GET_PROPERTIES, UPDATE_PROPERTIES} from '../actions/types';\nimport {Property} from '../../schema/models';\nimport {Params} from '../../../table/store/actions/actions';\n\ntype GetPropertiesActionSuccess = SucceededAsyncAction<typeof GET_PROPERTIES, Property[], Params>;\ntype UpdatePropertiesActionSuccess = SucceededAsyncAction<typeof UPDATE_PROPERTIES, Property[], Params>;\n\nconst properties: Reducer<Property[], AsyncAction<any, any>> = (state = [], action) => {\n    if (action.type === GET_PROPERTIES) {\n        switch (action.status) {\n            case AsyncActionStatus.SUCCEEDED:\n                return requestProperties(state, action as GetPropertiesActionSuccess);\n            default:\n                return state;\n        }\n    }\n    if (action.type === UPDATE_PROPERTIES) {\n        switch (action.status) {\n            case AsyncActionStatus.SUCCEEDED:\n                return requestUpdateProperties(state, action as UpdatePropertiesActionSuccess);\n            default:\n                return state;\n        }\n    }\n\n    return state;\n};\n\nconst requestProperties = (state: Property[], action: GetPropertiesActionSuccess):Property[] => {\n    return action.payload;\n};\nconst requestUpdateProperties = (state: Property[], action: UpdatePropertiesActionSuccess):Property[] => {\n    return action.payload;\n};\n\nexport default properties;\n\n\n//selectors\nexport const getProperties = (state: any) => {\n    return state;\n};\n","import {combineReducers} from 'redux';\n\nimport properties, * as fromOrderedCalls from './properties';\nimport {MODULE_NAME} from '../../constants';\n\nconst rootReducer = combineReducers({\n    properties\n});\n\nexport default rootReducer;\n\n\n// selectors\nexport const getProperties = (state: any) =>\n    fromOrderedCalls.getProperties(state[MODULE_NAME].properties);\n\n\n"],"sourceRoot":""}